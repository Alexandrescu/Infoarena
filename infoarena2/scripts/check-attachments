#! /usr/bin/env php
<?php

require_once("utilities.php");
require_once(IA_ROOT . "common/db/attachment.php");

log_print("Checking attachment dir...");

$atts = attachment_get_all("%", "%");
$files = glob(IA_ROOT . "attach/*");

$extra_files = array_flip($files);
$extra_atts = array();

// Check attachments.
foreach ($atts as $att) {
    $fname = attachment_get_filepath($att);
    // log_print("Looking for $fname");
    if (array_key_exists($fname, $extra_files)) {
        unset($extra_files[$fname]);
    } else {
        $extra_atts[] = $att;
    }
}

// FIXME: check cache.

$extra_files = array_keys($extra_files);

if (count($extra_files) == 0 && count($extra_atts) == 0) {
    log_print("Database and attach dir are in perfect sync.");
} else {
    log_print("There are are ".count($extra_files)." out of ".count($files)." disk files with no db entry.");
    if (count($extra_files)) {
        if (read_bool("Do you want to see a list?", false)) {
            foreach ($extra_files as $file) {
                log_print($file);
            }
        }
        if (read_bool("Want to delete them?", false)) {
            foreach ($extra_files as $file) {
                unlink($file);
            }
        }
    }

    log_print("There are are ".count($extra_atts)." out of ".count($atts)." db files with no disk file.");
    if (count($extra_atts)) {
        if (read_bool("Do you want to see a list?", false)) {
            foreach ($extra_atts as $att) {
                log_print("page ".$att['page']." name ".$att['name']);
            }
        }
        if (read_bool("Want to delete them?", false)) {
            foreach ($extra_atts as $att) {
                attachment_delete($att['id']);
            }
        }
    }
}

// Again, in case we changed something.
$atts = attachment_get_all("%", "%");
$files = glob(IA_ROOT . "attach/*");

if (read_bool("Enforce permissions?", no)) {
    $defowner = null;
    if (preg_match('/\/home\/([^\/]*)/', IA_ROOT, $matches)) {
        $defowner = $matches[1];
    }
    $userown = read_line("Owning user?", $defowner);
    $groupown = read_line("Owning group?", $defowner);
    foreach ($files as $file) {
        $err = false;
        if (@chmod($file, 0660) == false) {
            log_print("Failed chmod on $file");
            $err = true;
        }
        if (@chown($file, $userown) == false) {
            log_print("Failed chown on $file");
            $err = true;
        }
        if (@chgrp($file, $userown) == false) {
            log_print("Failed chgrp on $file");
            $err = true;
        }
        if (!$err) {
            log_print("Fixed permissions for $file");
        }
    }
}

?>

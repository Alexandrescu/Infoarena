#! /usr/bin/env php
<?php

require_once(dirname($argv[0]) . "/utilities.php");
require_once(IA_ROOT . "common/db/attachment.php");
db_connect();

log_print("Checking attachment dir...");
log_warn("This script consumes tons of memory so errors might occur");

$res = db_query("SELECT `id`, `name`, `page` FROM ia_file");

if (read_bool("Lower case all attachments files?", true)) {
    $extra_files = glob(IA_ROOT . "attach/*");
    foreach ($extra_files as $fname) {
        if (preg_match('/[A-Z]/', $fname)) {
            rename($fname, strtolower($fname));
        }
    }
    unset($extra_files);
}

$extra_files = array_flip(glob(IA_ROOT . "attach/*"));

$extra_atts = array();
$total_files = count($extra_files);
$total_atts = 0;

// Check attachments.
while ($att = db_next_row($res)) {
    ++$total_atts;
    $fname = attachment_get_filepath($att);
    if (array_key_exists($fname, $extra_files)) {
        unset($extra_files[$fname]);
    } else {
        $extra_atts[] = $att;
    }
}

// FIXME: check cache.
$extra_files = array_keys($extra_files);

if (count($extra_files) == 0 && count($extra_atts) == 0) {
    log_print("Database and attach dir are in perfect sync, $total_files total files.");
} else {
    log_print("There are are ".count($extra_files)." out of ".$total_files." disk files with no db entry.");
    if (count($extra_files)) {
        if (read_bool("Do you want to see a list?", false)) {
            foreach ($extra_files as $file) {
                log_print($file);
            }
        }
        if (read_bool("Want to delete them?", false)) {
            foreach ($extra_files as $file) {
                unlink($file);
            }
        }
    }

    log_print("There are are ".count($extra_atts)." out of ".$total_atts." db files with no disk file.");
    if (count($extra_atts)) {
        if (read_bool("Do you want to see a list?", false)) {
            foreach ($extra_atts as $att) {
                log_print("page ".$att['page']." name ".$att['name']);
            }
        }
        if (read_bool("Want to delete them?", false)) {
            foreach ($extra_atts as $att) {
                attachment_delete($att['id']);
            }
        }
    }
}

unset($extra_atts);
unset($extra_files);

// Again, in case we changed something.
$files = glob(IA_ROOT . "attach/*");

if (read_bool("Enforce permissions?", false)) {
    $defowner = null;
    if (preg_match('/\/home\/([^\/]*)/', IA_ROOT, $matches)) {
        $defowner = $matches[1];
    }
    $userown = read_line("Owning user?", $defowner);
    $groupown = read_line("Owning group?", $defowner);
    $quiet = read_bool("Do it quietly?", true);
    $errs = false;
    foreach ($files as $file) {
        $err = array();
        if (@chmod($file, 0660) == false) {
            $err[] = "chmod";
        }
        if (@chown($file, $userown) == false) {
            $err[] = "chown";
        }
        if (@chgrp($file, $userown) == false) {
            $err[] = "chgrp";
        }
        $errs |= $err;
        if (!$quiet) {
            if ($err) {
                log_print("Failed ".implode(', ', $err)." on $file");
            } else {
                log_print("Fixed permissions for $file");
            }
        }
    }
    if ($errs) {
        log_print("There were some errors. You should run this as root.");
    }
}

?>

/***

    MochiKit.MochiKit 1.4 : PACKED VERSION

    THIS FILE IS AUTOMATICALLY GENERATED.  If creating patches, please
    diff against the source tree, not this file.

    See <http://mochikit.com/> for documentation, downloads, license, etc.

    (c) 2005 Bob Ippolito.  All rights Reserved.

***/

if(typeof (dojo)!="undefined"){
dojo.provide("MochiKit.Base");
}
if(typeof (MochiKit)=="undefined"){
MochiKit={};
}
if(typeof (MochiKit.Base)=="undefined"){
MochiKit.Base={};
}
if(typeof (MochiKit.__export__)=="undefined"){
MochiKit.__export__=(MochiKit.__compat__||(typeof (JSAN)=="undefined"&&typeof (dojo)=="undefined"));
}
MochiKit.Base.VERSION="1.4";
MochiKit.Base.NAME="MochiKit.Base";
MochiKit.Base.update=function(_1,_2){
if(_1===null){
_1={};
}
for(var i=1;i<arguments.length;i++){
var o=arguments[i];
if(typeof (o)!="undefined"&&o!==null){
for(var k in o){
_1[k]=o[k];
}
}
}
return _1;
};
MochiKit.Base.update(MochiKit.Base,{__repr__:function(){
return "["+this.NAME+" "+this.VERSION+"]";
},toString:function(){
return this.__repr__();
},camelize:function(_6){
var _7=_6.split("-");
var cc=_7[0];
for(var i=1;i<_7.length;i++){
cc+=_7[i].charAt(0).toUpperCase()+_7[i].substring(1);
}
return cc;
},counter:function(n){
if(arguments.length===0){
n=1;
}
return function(){
return n++;
};
},clone:function(obj){
var me=arguments.callee;
if(arguments.length==1){
me.prototype=obj;
return new me();
}
},_flattenArray:function(res,lst){
for(var i=0;i<lst.length;i++){
var o=lst[i];
if(o instanceof Array){
arguments.callee(res,o);
}else{
res.push(o);
}
}
return res;
},flattenArray:function(lst){
return MochiKit.Base._flattenArray([],lst);
},flattenArguments:function(lst){
var res=[];
var m=MochiKit.Base;
var _15=m.extend(null,arguments);
while(_15.length){
var o=_15.shift();
if(o&&typeof (o)=="object"&&typeof (o.length)=="number"){
for(var i=o.length-1;i>=0;i--){
_15.unshift(o[i]);
}
}else{
res.push(o);
}
}
return res;
},extend:function(_16,obj,_17){
if(!_17){
_17=0;
}
if(obj){
var l=obj.length;
if(typeof (l)!="number"){
if(typeof (MochiKit.Iter)!="undefined"){
obj=MochiKit.Iter.list(obj);
l=obj.length;
}else{
throw new TypeError("Argument not an array-like and MochiKit.Iter not present");
}
}
if(!_16){
_16=[];
}
for(var i=_17;i<l;i++){
_16.push(obj[i]);
}
}
return _16;
},updatetree:function(_19,obj){
if(_19===null){
_19={};
}
for(var i=1;i<arguments.length;i++){
var o=arguments[i];
if(typeof (o)!="undefined"&&o!==null){
for(var k in o){
var v=o[k];
if(typeof (_19[k])=="object"&&typeof (v)=="object"){
arguments.callee(_19[k],v);
}else{
_19[k]=v;
}
}
}
}
return _19;
},setdefault:function(_21,obj){
if(_21===null){
_21={};
}
for(var i=1;i<arguments.length;i++){
var o=arguments[i];
for(var k in o){
if(!(k in _21)){
_21[k]=o[k];
}
}
}
return _21;
},keys:function(obj){
var _22=[];
for(var _23 in obj){
_22.push(_23);
}
return _22;
},values:function(obj){
var _24=[];
for(var _25 in obj){
_24.push(obj[_25]);
}
return _24;
},items:function(obj){
var _26=[];
var e;
for(var _28 in obj){
var v;
try{
v=obj[_28];
}
catch(e){
continue;
}
_26.push([_28,v]);
}
return _26;
},_newNamedError:function(_29,_30,_31){
_31.prototype=new MochiKit.Base.NamedError(_29.NAME+"."+_30);
_29[_30]=_31;
},operator:{truth:function(a){
return !!a;
},lognot:function(a){
return !a;
},identity:function(a){
return a;
},not:function(a){
return ~a;
},neg:function(a){
return -a;
},add:function(a,b){
return a+b;
},sub:function(a,b){
return a-b;
},div:function(a,b){
return a/b;
},mod:function(a,b){
return a%b;
},mul:function(a,b){
return a*b;
},and:function(a,b){
return a&b;
},or:function(a,b){
return a|b;
},xor:function(a,b){
return a^b;
},lshift:function(a,b){
return a<<b;
},rshift:function(a,b){
return a>>b;
},zrshift:function(a,b){
return a>>>b;
},eq:function(a,b){
return a==b;
},ne:function(a,b){
return a!=b;
},gt:function(a,b){
return a>b;
},ge:function(a,b){
return a>=b;
},lt:function(a,b){
return a<b;
},le:function(a,b){
return a<=b;
},seq:function(a,b){
return a===b;
},sne:function(a,b){
return a!==b;
},ceq:function(a,b){
return MochiKit.Base.compare(a,b)===0;
},cne:function(a,b){
return MochiKit.Base.compare(a,b)!==0;
},cgt:function(a,b){
return MochiKit.Base.compare(a,b)==1;
},cge:function(a,b){
return MochiKit.Base.compare(a,b)!=-1;
},clt:function(a,b){
return MochiKit.Base.compare(a,b)==-1;
},cle:function(a,b){
return MochiKit.Base.compare(a,b)!=1;
},logand:function(a,b){
return a&&b;
},logor:function(a,b){
return a||b;
},contains:function(a,b){
return b in a;
}},forwardCall:function(_34){
return function(){
return this[_34].apply(this,arguments);
};
},itemgetter:function(_35){
return function(arg){
return arg[_35];
};
},typeMatcher:function(){
var _37={};
for(var i=0;i<arguments.length;i++){
var typ=arguments[i];
_37[typ]=typ;
}
return function(){
for(var i=0;i<arguments.length;i++){
if(!(typeof (arguments[i]) in _37)){
return false;
}
}
return true;
};
},isNull:function(){
for(var i=0;i<arguments.length;i++){
if(arguments[i]!==null){
return false;
}
}
return true;
},isUndefinedOrNull:function(){
for(var i=0;i<arguments.length;i++){
var o=arguments[i];
if(!(typeof (o)=="undefined"||o===null)){
return false;
}
}
return true;
},isEmpty:function(obj){
return !MochiKit.Base.isNotEmpty.apply(this,arguments);
},isNotEmpty:function(obj){
for(var i=0;i<arguments.length;i++){
var o=arguments[i];
if(!(o&&o.length)){
return false;
}
}
return true;
},isArrayLike:function(){
for(var i=0;i<arguments.length;i++){
var o=arguments[i];
var typ=typeof (o);
if((typ!="object"&&!(typ=="function"&&typeof (o.item)=="function"))||o===null||typeof (o.length)!="number"||o.nodeType===3){
return false;
}
}
return true;
},isDateLike:function(){
for(var i=0;i<arguments.length;i++){
var o=arguments[i];
if(typeof (o)!="object"||o===null||typeof (o.getTime)!="function"){
return false;
}
}
return true;
},xmap:function(fn){
if(fn===null){
return MochiKit.Base.extend(null,arguments,1);
}
var _40=[];
for(var i=1;i<arguments.length;i++){
_40.push(fn(arguments[i]));
}
return _40;
},map:function(fn,lst){
var m=MochiKit.Base;
var itr=MochiKit.Iter;
var _42=m.isArrayLike;
if(arguments.length<=2){
if(!_42(lst)){
if(itr){
lst=itr.list(lst);
if(fn===null){
return lst;
}
}else{
throw new TypeError("Argument not an array-like and MochiKit.Iter not present");
}
}
if(fn===null){
return m.extend(null,lst);
}
var _43=[];
for(var i=0;i<lst.length;i++){
_43.push(fn(lst[i]));
}
return _43;
}else{
if(fn===null){
fn=Array;
}
var _44=null;
for(i=1;i<arguments.length;i++){
if(!_42(arguments[i])){
if(itr){
return itr.list(itr.imap.apply(null,arguments));
}else{
throw new TypeError("Argument not an array-like and MochiKit.Iter not present");
}
}
var l=arguments[i].length;
if(_44===null||_44>l){
_44=l;
}
}
_43=[];
for(i=0;i<_44;i++){
var _45=[];
for(var j=1;j<arguments.length;j++){
_45.push(arguments[j][i]);
}
_43.push(fn.apply(this,_45));
}
return _43;
}
},xfilter:function(fn){
var _47=[];
if(fn===null){
fn=MochiKit.Base.operator.truth;
}
for(var i=1;i<arguments.length;i++){
var o=arguments[i];
if(fn(o)){
_47.push(o);
}
}
return _47;
},filter:function(fn,lst,_48){
var _49=[];
var m=MochiKit.Base;
if(!m.isArrayLike(lst)){
if(MochiKit.Iter){
lst=MochiKit.Iter.list(lst);
}else{
throw new TypeError("Argument not an array-like and MochiKit.Iter not present");
}
}
if(fn===null){
fn=m.operator.truth;
}
if(typeof (Array.prototype.filter)=="function"){
return Array.prototype.filter.call(lst,fn,_48);
}else{
if(typeof (_48)=="undefined"||_48===null){
for(var i=0;i<lst.length;i++){
var o=lst[i];
if(fn(o)){
_49.push(o);
}
}
}else{
for(i=0;i<lst.length;i++){
o=lst[i];
if(fn.call(_48,o)){
_49.push(o);
}
}
}
}
return _49;
},_wrapDumbFunction:function(_50){
return function(){
switch(arguments.length){
case 0:
return _50();
case 1:
return _50(arguments[0]);
case 2:
return _50(arguments[0],arguments[1]);
case 3:
return _50(arguments[0],arguments[1],arguments[2]);
}
var _51=[];
for(var i=0;i<arguments.length;i++){
_51.push("arguments["+i+"]");
}
return eval("(func("+_51.join(",")+"))");
};
},methodcaller:function(_52){
var _53=MochiKit.Base.extend(null,arguments,1);
if(typeof (_52)=="function"){
return function(obj){
return _52.apply(obj,_53);
};
}else{
return function(obj){
return obj[_52].apply(obj,_53);
};
}
},method:function(_54,_55){
var m=MochiKit.Base;
return m.bind.apply(this,m.extend([_55,_54],arguments,2));
},compose:function(f1,f2){
var _58=[];
var m=MochiKit.Base;
if(arguments.length===0){
throw new TypeError("compose() requires at least one argument");
}
for(var i=0;i<arguments.length;i++){
var fn=arguments[i];
if(typeof (fn)!="function"){
throw new TypeError(m.repr(fn)+" is not a function");
}
_58.push(fn);
}
return function(){
var _59=arguments;
for(var i=_58.length-1;i>=0;i--){
_59=[_58[i].apply(this,_59)];
}
return _59[0];
};
},bind:function(_60,_61){
if(typeof (_60)=="string"){
_60=_61[_60];
}
var _62=_60.im_func;
var _63=_60.im_preargs;
var _64=_60.im_self;
var m=MochiKit.Base;
if(typeof (_60)=="function"&&typeof (_60.apply)=="undefined"){
_60=m._wrapDumbFunction(_60);
}
if(typeof (_62)!="function"){
_62=_60;
}
if(typeof (_61)!="undefined"){
_64=_61;
}
if(typeof (_63)=="undefined"){
_63=[];
}else{
_63=_63.slice();
}
m.extend(_63,arguments,2);
var _65=function(){
var _66=arguments;
var me=arguments.callee;
if(me.im_preargs.length>0){
_66=m.concat(me.im_preargs,_66);
}
var _61=me.im_self;
if(!_61){
_61=this;
}
return me.im_func.apply(_61,_66);
};
_65.im_self=_64;
_65.im_func=_62;
_65.im_preargs=_63;
return _65;
},bindMethods:function(_67){
var _68=MochiKit.Base.bind;
for(var k in _67){
var _69=_67[k];
if(typeof (_69)=="function"){
_67[k]=_68(_69,_67);
}
}
},registerComparator:function(_70,_71,_72,_73){
MochiKit.Base.comparatorRegistry.register(_70,_71,_72,_73);
},_primitives:{"boolean":true,"string":true,"number":true},compare:function(a,b){
if(a==b){
return 0;
}
var _74=(typeof (a)=="undefined"||a===null);
var _75=(typeof (b)=="undefined"||b===null);
if(_74&&_75){
return 0;
}else{
if(_74){
return -1;
}else{
if(_75){
return 1;
}
}
}
var m=MochiKit.Base;
var _76=m._primitives;
if(!(typeof (a) in _76&&typeof (b) in _76)){
try{
return m.comparatorRegistry.match(a,b);
}
catch(e){
if(e!=m.NotFound){
throw e;
}
}
}
if(a<b){
return -1;
}else{
if(a>b){
return 1;
}
}
var _77=m.repr;
throw new TypeError(_77(a)+" and "+_77(b)+" can not be compared");
},compareDateLike:function(a,b){
return MochiKit.Base.compare(a.getTime(),b.getTime());
},compareArrayLike:function(a,b){
var _78=MochiKit.Base.compare;
var _79=a.length;
var _80=0;
if(_79>b.length){
_80=1;
_79=b.length;
}else{
if(_79<b.length){
_80=-1;
}
}
for(var i=0;i<_79;i++){
var cmp=_78(a[i],b[i]);
if(cmp){
return cmp;
}
}
return _80;
},registerRepr:function(_82,_83,_84,_85){
MochiKit.Base.reprRegistry.register(_82,_83,_84,_85);
},repr:function(o){
if(typeof (o)=="undefined"){
return "undefined";
}else{
if(o===null){
return "null";
}
}
try{
if(typeof (o.__repr__)=="function"){
return o.__repr__();
}else{
if(typeof (o.repr)=="function"&&o.repr!=arguments.callee){
return o.repr();
}
}
return MochiKit.Base.reprRegistry.match(o);
}
catch(e){
if(typeof (o.NAME)=="string"&&(o.toString==Function.prototype.toString||o.toString==Object.prototype.toString)){
return o.NAME;
}
}
try{
var _86=(o+"");
}
catch(e){
return "["+typeof (o)+"]";
}
if(typeof (o)=="function"){
o=_86.replace(/^\s+/,"");
var idx=o.indexOf("{");
if(idx!=-1){
o=o.substr(0,idx)+"{...}";
}
}
return _86;
},reprArrayLike:function(o){
var m=MochiKit.Base;
return "["+m.map(m.repr,o).join(", ")+"]";
},reprString:function(o){
return ("\""+o.replace(/(["\\])/g,"\\$1")+"\"").replace(/[\f]/g,"\\f").replace(/[\b]/g,"\\b").replace(/[\n]/g,"\\n").replace(/[\t]/g,"\\t").replace(/[\r]/g,"\\r");
},reprNumber:function(o){
return o+"";
},registerJSON:function(_88,_89,_90,_91){
MochiKit.Base.jsonRegistry.register(_88,_89,_90,_91);
},evalJSON:function(){
return eval("("+arguments[0]+")");
},serializeJSON:function(o){
var _92=typeof (o);
if(_92=="number"||_92=="boolean"){
return o+"";
}else{
if(o===null){
return "null";
}
}
var m=MochiKit.Base;
var _93=m.reprString;
if(_92=="string"){
return _93(o);
}
var me=arguments.callee;
var _94;
if(typeof (o.__json__)=="function"){
_94=o.__json__();
if(o!==_94){
return me(_94);
}
}
if(typeof (o.json)=="function"){
_94=o.json();
if(o!==_94){
return me(_94);
}
}
if(_92!="function"&&typeof (o.length)=="number"){
var res=[];
for(var i=0;i<o.length;i++){
var val=me(o[i]);
if(typeof (val)!="string"){
val="undefined";
}
res.push(val);
}
return "["+res.join(", ")+"]";
}
try{
_94=m.jsonRegistry.match(o);
if(o!==_94){
return me(_94);
}
}
catch(e){
if(e!=m.NotFound){
throw e;
}
}
if(_92=="undefined"){
throw new TypeError("undefined can not be serialized as JSON");
}
if(_92=="function"){
return null;
}
res=[];
for(var k in o){
var _96;
if(typeof (k)=="number"){
_96="\""+k+"\"";
}else{
if(typeof (k)=="string"){
_96=_93(k);
}else{
continue;
}
}
val=me(o[k]);
if(typeof (val)!="string"){
continue;
}
res.push(_96+":"+val);
}
return "{"+res.join(", ")+"}";
},objEqual:function(a,b){
return (MochiKit.Base.compare(a,b)===0);
},arrayEqual:function(_97,arr){
if(_97.length!=arr.length){
return false;
}
return (MochiKit.Base.compare(_97,arr)===0);
},concat:function(){
var _99=[];
var _100=MochiKit.Base.extend;
for(var i=0;i<arguments.length;i++){
_100(_99,arguments[i]);
}
return _99;
},keyComparator:function(key){
var m=MochiKit.Base;
var _102=m.compare;
if(arguments.length==1){
return function(a,b){
return _102(a[key],b[key]);
};
}
var _103=m.extend(null,arguments);
return function(a,b){
var rval=0;
for(var i=0;(rval===0)&&(i<_103.length);i++){
var key=_103[i];
rval=_102(a[key],b[key]);
}
return rval;
};
},reverseKeyComparator:function(key){
var _105=MochiKit.Base.keyComparator.apply(this,arguments);
return function(a,b){
return _105(b,a);
};
},partial:function(func){
var m=MochiKit.Base;
return m.bind.apply(this,m.extend([func,undefined],arguments,1));
},listMinMax:function(_107,lst){
if(lst.length===0){
return null;
}
var cur=lst[0];
var _109=MochiKit.Base.compare;
for(var i=1;i<lst.length;i++){
var o=lst[i];
if(_109(o,cur)==_107){
cur=o;
}
}
return cur;
},objMax:function(){
return MochiKit.Base.listMinMax(1,arguments);
},objMin:function(){
return MochiKit.Base.listMinMax(-1,arguments);
},findIdentical:function(lst,_110,_111,end){
if(typeof (end)=="undefined"||end===null){
end=lst.length;
}
if(typeof (_111)=="undefined"||_111===null){
_111=0;
}
for(var i=_111;i<end;i++){
if(lst[i]===_110){
return i;
}
}
return -1;
},mean:function(){
var sum=0;
var m=MochiKit.Base;
var args=m.extend(null,arguments);
var _115=args.length;
while(args.length){
var o=args.shift();
if(o&&typeof (o)=="object"&&typeof (o.length)=="number"){
_115+=o.length-1;
for(var i=o.length-1;i>=0;i--){
sum+=o[i];
}
}else{
sum+=o;
}
}
if(_115<=0){
throw new TypeError("mean() requires at least one argument");
}
return sum/_115;
},median:function(){
var data=MochiKit.Base.flattenArguments(arguments);
if(data.length===0){
throw new TypeError("median() requires at least one argument");
}
data.sort(compare);
if(data.length%2==0){
var _117=data.length/2;
return (data[_117]+data[_117-1])/2;
}else{
return data[(data.length-1)/2];
}
},findValue:function(lst,_118,_119,end){
if(typeof (end)=="undefined"||end===null){
end=lst.length;
}
if(typeof (_119)=="undefined"||_119===null){
_119=0;
}
var cmp=MochiKit.Base.compare;
for(var i=_119;i<end;i++){
if(cmp(lst[i],_118)===0){
return i;
}
}
return -1;
},nodeWalk:function(node,_121){
var _122=[node];
var _123=MochiKit.Base.extend;
while(_122.length){
var res=_121(_122.shift());
if(res){
_123(_122,res);
}
}
},nameFunctions:function(_124){
var base=_124.NAME;
if(typeof (base)=="undefined"){
base="";
}else{
base=base+".";
}
for(var name in _124){
var o=_124[name];
if(typeof (o)=="function"&&typeof (o.NAME)=="undefined"){
try{
o.NAME=base+name;
}
catch(e){
}
}
}
},queryString:function(_127,_128){
if(typeof (MochiKit.DOM)!="undefined"&&arguments.length==1&&(typeof (_127)=="string"||(typeof (_127.nodeType)!="undefined"&&_127.nodeType>0))){
var kv=MochiKit.DOM.formContents(_127);
_127=kv[0];
_128=kv[1];
}else{
if(arguments.length==1){
var o=_127;
_127=[];
_128=[];
for(var k in o){
var v=o[k];
if(typeof (v)=="function"){
continue;
}else{
if(typeof (v)!="string"&&typeof (v.length)=="number"){
for(var i=0;i<v.length;i++){
_127.push(k);
_128.push(v[i]);
}
}else{
_127.push(k);
_128.push(v);
}
}
}
}
}
var rval=[];
var len=Math.min(_127.length,_128.length);
var _131=MochiKit.Base.urlEncode;
for(var i=0;i<len;i++){
v=_128[i];
if(typeof (v)!="undefined"&&v!==null){
rval.push(_131(_127[i])+"="+_131(v));
}
}
return rval.join("&");
},parseQueryString:function(_132,_133){
var qstr=(_132[0]=="?")?_132.substring(1):_132;
var _135=qstr.replace(/\+/g,"%20").split(/(\&amp\;|\&\#38\;|\&#x26;|\&)/);
var o={};
var _136;
if(typeof (decodeURIComponent)!="undefined"){
_136=decodeURIComponent;
}else{
_136=unescape;
}
if(_133){
for(var i=0;i<_135.length;i++){
var pair=_135[i].split("=");
if(pair.length!==2){
continue;
}
var name=_136(pair[0]);
var arr=o[name];
if(!(arr instanceof Array)){
arr=[];
o[name]=arr;
}
arr.push(_136(pair[1]));
}
}else{
for(i=0;i<_135.length;i++){
pair=_135[i].split("=");
if(pair.length!==2){
continue;
}
o[_136(pair[0])]=_136(pair[1]);
}
}
return o;
}});
MochiKit.Base.AdapterRegistry=function(){
this.pairs=[];
};
MochiKit.Base.AdapterRegistry.prototype={register:function(name,_138,wrap,_140){
if(_140){
this.pairs.unshift([name,_138,wrap]);
}else{
this.pairs.push([name,_138,wrap]);
}
},match:function(){
for(var i=0;i<this.pairs.length;i++){
var pair=this.pairs[i];
if(pair[1].apply(this,arguments)){
return pair[2].apply(this,arguments);
}
}
throw MochiKit.Base.NotFound;
},unregister:function(name){
for(var i=0;i<this.pairs.length;i++){
var pair=this.pairs[i];
if(pair[0]==name){
this.pairs.splice(i,1);
return true;
}
}
return false;
}};
MochiKit.Base.EXPORT=["flattenArray","noop","camelize","counter","clone","extend","update","updatetree","setdefault","keys","values","items","NamedError","operator","forwardCall","itemgetter","typeMatcher","isCallable","isUndefined","isUndefinedOrNull","isNull","isEmpty","isNotEmpty","isArrayLike","isDateLike","xmap","map","xfilter","filter","methodcaller","compose","bind","bindMethods","NotFound","AdapterRegistry","registerComparator","compare","registerRepr","repr","objEqual","arrayEqual","concat","keyComparator","reverseKeyComparator","partial","merge","listMinMax","listMax","listMin","objMax","objMin","nodeWalk","zip","urlEncode","queryString","serializeJSON","registerJSON","evalJSON","parseQueryString","findValue","findIdentical","flattenArguments","method","average","mean","median"];
MochiKit.Base.EXPORT_OK=["nameFunctions","comparatorRegistry","reprRegistry","jsonRegistry","compareDateLike","compareArrayLike","reprArrayLike","reprString","reprNumber"];
MochiKit.Base._exportSymbols=function(_141,_142){
if(!MochiKit.__export__){
return;
}
var all=_142.EXPORT_TAGS[":all"];
for(var i=0;i<all.length;i++){
_141[all[i]]=_142[all[i]];
}
};
MochiKit.Base.__new__=function(){
var m=this;
m.noop=m.operator.identity;
m.forward=m.forwardCall;
m.find=m.findValue;
if(typeof (encodeURIComponent)!="undefined"){
m.urlEncode=function(_144){
return encodeURIComponent(_144).replace(/\'/g,"%27");
};
}else{
m.urlEncode=function(_145){
return escape(_145).replace(/\+/g,"%2B").replace(/\"/g,"%22").rval.replace(/\'/g,"%27");
};
}
m.NamedError=function(name){
this.message=name;
this.name=name;
};
m.NamedError.prototype=new Error();
m.update(m.NamedError.prototype,{repr:function(){
if(this.message&&this.message!=this.name){
return this.name+"("+m.repr(this.message)+")";
}else{
return this.name+"()";
}
},toString:m.forwardCall("repr")});
m.NotFound=new m.NamedError("MochiKit.Base.NotFound");
m.listMax=m.partial(m.listMinMax,1);
m.listMin=m.partial(m.listMinMax,-1);
m.isCallable=m.typeMatcher("function");
m.isUndefined=m.typeMatcher("undefined");
m.merge=m.partial(m.update,null);
m.zip=m.partial(m.map,null);
m.average=m.mean;
m.comparatorRegistry=new m.AdapterRegistry();
m.registerComparator("dateLike",m.isDateLike,m.compareDateLike);
m.registerComparator("arrayLike",m.isArrayLike,m.compareArrayLike);
m.reprRegistry=new m.AdapterRegistry();
m.registerRepr("arrayLike",m.isArrayLike,m.reprArrayLike);
m.registerRepr("string",m.typeMatcher("string"),m.reprString);
m.registerRepr("numbers",m.typeMatcher("number","boolean"),m.reprNumber);
m.jsonRegistry=new m.AdapterRegistry();
var all=m.concat(m.EXPORT,m.EXPORT_OK);
m.EXPORT_TAGS={":common":m.concat(m.EXPORT_OK),":all":all};
m.nameFunctions(this);
};
MochiKit.Base.__new__();
if(MochiKit.__export__){
compare=MochiKit.Base.compare;
compose=MochiKit.Base.compose;
serializeJSON=MochiKit.Base.serializeJSON;
}
MochiKit.Base._exportSymbols(this,MochiKit.Base);
if(typeof (dojo)!="undefined"){
dojo.provide("MochiKit.Async");
dojo.require("MochiKit.Base");
}
if(typeof (JSAN)!="undefined"){
JSAN.use("MochiKit.Base",[]);
}
try{
if(typeof (MochiKit.Base)=="undefined"){
throw "";
}
}
catch(e){
throw "MochiKit.Async depends on MochiKit.Base!";
}
if(typeof (MochiKit.Async)=="undefined"){
MochiKit.Async={};
}
MochiKit.Async.NAME="MochiKit.Async";
MochiKit.Async.VERSION="1.4";
MochiKit.Async.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
MochiKit.Async.toString=function(){
return this.__repr__();
};
MochiKit.Async.Deferred=function(_146){
this.chain=[];
this.id=this._nextId();
this.fired=-1;
this.paused=0;
this.results=[null,null];
this.canceller=_146;
this.silentlyCancelled=false;
this.chained=false;
};
MochiKit.Async.Deferred.prototype={repr:function(){
var _147;
if(this.fired==-1){
_147="unfired";
}else{
if(this.fired===0){
_147="success";
}else{
_147="error";
}
}
return "Deferred("+this.id+", "+_147+")";
},toString:MochiKit.Base.forwardCall("repr"),_nextId:MochiKit.Base.counter(),cancel:function(){
var self=MochiKit.Async;
if(this.fired==-1){
if(this.canceller){
this.canceller(this);
}else{
this.silentlyCancelled=true;
}
if(this.fired==-1){
this.errback(new self.CancelledError(this));
}
}else{
if((this.fired===0)&&(this.results[0] instanceof self.Deferred)){
this.results[0].cancel();
}
}
},_resback:function(res){
this.fired=((res instanceof Error)?1:0);
this.results[this.fired]=res;
this._fire();
},_check:function(){
if(this.fired!=-1){
if(!this.silentlyCancelled){
throw new MochiKit.Async.AlreadyCalledError(this);
}
this.silentlyCancelled=false;
return;
}
},callback:function(res){
this._check();
if(res instanceof MochiKit.Async.Deferred){
throw new Error("Deferred instances can only be chained if they are the result of a callback");
}
this._resback(res);
},errback:function(res){
this._check();
var self=MochiKit.Async;
if(res instanceof self.Deferred){
throw new Error("Deferred instances can only be chained if they are the result of a callback");
}
if(!(res instanceof Error)){
res=new self.GenericError(res);
}
this._resback(res);
},addBoth:function(fn){
if(arguments.length>1){
fn=MochiKit.Base.partial.apply(null,arguments);
}
return this.addCallbacks(fn,fn);
},addCallback:function(fn){
if(arguments.length>1){
fn=MochiKit.Base.partial.apply(null,arguments);
}
return this.addCallbacks(fn,null);
},addErrback:function(fn){
if(arguments.length>1){
fn=MochiKit.Base.partial.apply(null,arguments);
}
return this.addCallbacks(null,fn);
},addCallbacks:function(cb,eb){
if(this.chained){
throw new Error("Chained Deferreds can not be re-used");
}
this.chain.push([cb,eb]);
if(this.fired>=0){
this._fire();
}
return this;
},_fire:function(){
var _151=this.chain;
var _152=this.fired;
var res=this.results[_152];
var self=this;
var cb=null;
while(_151.length>0&&this.paused===0){
var pair=_151.shift();
var f=pair[_152];
if(f===null){
continue;
}
try{
res=f(res);
_152=((res instanceof Error)?1:0);
if(res instanceof MochiKit.Async.Deferred){
cb=function(res){
self._resback(res);
self.paused--;
if((self.paused===0)&&(self.fired>=0)){
self._fire();
}
};
this.paused++;
}
}
catch(err){
_152=1;
if(!(err instanceof Error)){
err=new MochiKit.Async.GenericError(err);
}
res=err;
}
}
this.fired=_152;
this.results[_152]=res;
if(cb&&this.paused){
res.addBoth(cb);
res.chained=true;
}
}};
MochiKit.Base.update(MochiKit.Async,{evalJSONRequest:function(){
return eval("("+arguments[0].responseText+")");
},succeed:function(_154){
var d=new MochiKit.Async.Deferred();
d.callback.apply(d,arguments);
return d;
},fail:function(_156){
var d=new MochiKit.Async.Deferred();
d.errback.apply(d,arguments);
return d;
},getXMLHttpRequest:function(){
var self=arguments.callee;
if(!self.XMLHttpRequest){
var _157=[function(){
return new XMLHttpRequest();
},function(){
return new ActiveXObject("Msxml2.XMLHTTP");
},function(){
return new ActiveXObject("Microsoft.XMLHTTP");
},function(){
return new ActiveXObject("Msxml2.XMLHTTP.4.0");
},function(){
throw new MochiKit.Async.BrowserComplianceError("Browser does not support XMLHttpRequest");
}];
for(var i=0;i<_157.length;i++){
var func=_157[i];
try{
self.XMLHttpRequest=func;
return func();
}
catch(e){
}
}
}
return self.XMLHttpRequest();
},_xhr_onreadystatechange:function(d){
var m=MochiKit.Base;
if(this.readyState==4){
try{
this.onreadystatechange=null;
}
catch(e){
try{
this.onreadystatechange=m.noop;
}
catch(e){
}
}
var _158=null;
try{
_158=this.status;
if(!_158&&m.isNotEmpty(this.responseText)){
_158=304;
}
}
catch(e){
}
if(_158==200||_158==304){
d.callback(this);
}else{
var err=new MochiKit.Async.XMLHttpRequestError(this,"Request failed");
if(err.number){
d.errback(err);
}else{
d.errback(err);
}
}
}
},_xhr_canceller:function(req){
try{
req.onreadystatechange=null;
}
catch(e){
try{
req.onreadystatechange=MochiKit.Base.noop;
}
catch(e){
}
}
req.abort();
},sendXMLHttpRequest:function(req,_161){
if(typeof (_161)=="undefined"||_161===null){
_161="";
}
var m=MochiKit.Base;
var self=MochiKit.Async;
var d=new self.Deferred(m.partial(self._xhr_canceller,req));
try{
req.onreadystatechange=m.bind(self._xhr_onreadystatechange,req,d);
req.send(_161);
}
catch(e){
try{
req.onreadystatechange=null;
}
catch(ignore){
}
d.errback(e);
}
return d;
},doXHR:function(url,opts){
var m=MochiKit.Base;
opts=m.update({method:"GET",sendContent:""},opts);
var self=MochiKit.Async;
var req=self.getXMLHttpRequest();
if(opts.queryString){
var qs=m.queryString(opts.queryString);
if(qs){
url+="?"+qs;
}
}
req.open(opts.method,url,true,opts.username,opts.password);
if(req.overrideMimeType&&opts.mimeType){
req.overrideMimeType(opts.mimeType);
}
if(opts.headers){
var _165=opts.headers;
if(!m.isArrayLike(_165)){
_165=m.items(_165);
}
for(var i=0;i<_165.length;i++){
var _166=_165[i];
var name=_166[0];
var _167=_166[1];
req.setRequestHeader(name,_167);
}
}
return self.sendXMLHttpRequest(req,opts.sendContent);
},_buildURL:function(url){
if(arguments.length>1){
var m=MochiKit.Base;
var qs=m.queryString.apply(null,m.extend(null,arguments,1));
if(qs){
return url+"?"+qs;
}
}
return url;
},doSimpleXMLHttpRequest:function(url){
var self=MochiKit.Async;
url=self._buildURL.apply(self,arguments);
return self.doXHR(url);
},loadJSONDoc:function(url){
var self=MochiKit.Async;
url=self._buildURL.apply(self,arguments);
var d=self.doXHR(url,{"mimeType":"text/plain","headers":[["Accept","application/json"]]});
d=d.addCallback(self.evalJSONRequest);
return d;
},wait:function(_168,_169){
var d=new MochiKit.Async.Deferred();
var m=MochiKit.Base;
if(typeof (_169)!="undefined"){
d.addCallback(function(){
return _169;
});
}
var _170=setTimeout(m.bind("callback",d),Math.floor(_168*1000));
d.canceller=function(){
try{
clearTimeout(_170);
}
catch(e){
}
};
return d;
},callLater:function(_171,func){
var m=MochiKit.Base;
var _172=m.partial.apply(m,m.extend(null,arguments,1));
return MochiKit.Async.wait(_171).addCallback(function(res){
return _172();
});
}});
MochiKit.Async.DeferredLock=function(){
this.waiting=[];
this.locked=false;
this.id=this._nextId();
};
MochiKit.Async.DeferredLock.prototype={__class__:MochiKit.Async.DeferredLock,acquire:function(){
var d=new MochiKit.Async.Deferred();
if(this.locked){
this.waiting.push(d);
}else{
this.locked=true;
d.callback(this);
}
return d;
},release:function(){
if(!this.locked){
throw TypeError("Tried to release an unlocked DeferredLock");
}
this.locked=false;
if(this.waiting.length>0){
this.locked=true;
this.waiting.shift().callback(this);
}
},_nextId:MochiKit.Base.counter(),repr:function(){
var _173;
if(this.locked){
_173="locked, "+this.waiting.length+" waiting";
}else{
_173="unlocked";
}
return "DeferredLock("+this.id+", "+_173+")";
},toString:MochiKit.Base.forwardCall("repr")};
MochiKit.Async.DeferredList=function(list,_175,_176,_177,_178){
MochiKit.Async.Deferred.apply(this,[_178]);
this.list=list;
var _179=[];
this.resultList=_179;
this.finishedCount=0;
this.fireOnOneCallback=_175;
this.fireOnOneErrback=_176;
this.consumeErrors=_177;
var cb=MochiKit.Base.bind(this._cbDeferred,this);
for(var i=0;i<list.length;i++){
var d=list[i];
_179.push(undefined);
d.addCallback(cb,i,true);
d.addErrback(cb,i,false);
}
if(list.length===0&&!_175){
this.callback(this.resultList);
}
};
MochiKit.Async.DeferredList.prototype=new MochiKit.Async.Deferred();
MochiKit.Async.DeferredList.prototype._cbDeferred=function(_180,_181,_182){
this.resultList[_180]=[_181,_182];
this.finishedCount+=1;
if(this.fired==-1){
if(_181&&this.fireOnOneCallback){
this.callback([_180,_182]);
}else{
if(!_181&&this.fireOnOneErrback){
this.errback(_182);
}else{
if(this.finishedCount==this.list.length){
this.callback(this.resultList);
}
}
}
}
if(!_181&&this.consumeErrors){
_182=null;
}
return _182;
};
MochiKit.Async.gatherResults=function(_183){
var d=new MochiKit.Async.DeferredList(_183,false,true,false);
d.addCallback(function(_184){
var ret=[];
for(var i=0;i<_184.length;i++){
ret.push(_184[i][1]);
}
return ret;
});
return d;
};
MochiKit.Async.maybeDeferred=function(func){
var self=MochiKit.Async;
var _186;
try{
var r=func.apply(null,MochiKit.Base.extend([],arguments,1));
if(r instanceof self.Deferred){
_186=r;
}else{
if(r instanceof Error){
_186=self.fail(r);
}else{
_186=self.succeed(r);
}
}
}
catch(e){
_186=self.fail(e);
}
return _186;
};
MochiKit.Async.EXPORT=["AlreadyCalledError","CancelledError","BrowserComplianceError","GenericError","XMLHttpRequestError","Deferred","succeed","fail","getXMLHttpRequest","doSimpleXMLHttpRequest","loadJSONDoc","wait","callLater","sendXMLHttpRequest","DeferredLock","DeferredList","gatherResults","maybeDeferred","doXHR"];
MochiKit.Async.EXPORT_OK=["evalJSONRequest"];
MochiKit.Async.__new__=function(){
var m=MochiKit.Base;
var ne=m.partial(m._newNamedError,this);
ne("AlreadyCalledError",function(_189){
this.deferred=_189;
});
ne("CancelledError",function(_190){
this.deferred=_190;
});
ne("BrowserComplianceError",function(msg){
this.message=msg;
});
ne("GenericError",function(msg){
this.message=msg;
});
ne("XMLHttpRequestError",function(req,msg){
this.req=req;
this.message=msg;
try{
this.number=req.status;
}
catch(e){
}
});
this.EXPORT_TAGS={":common":this.EXPORT,":all":m.concat(this.EXPORT,this.EXPORT_OK)};
m.nameFunctions(this);
};
MochiKit.Async.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Async);
if(typeof (dojo)!="undefined"){
dojo.provide("MochiKit.DOM");
dojo.require("MochiKit.Base");
}
if(typeof (JSAN)!="undefined"){
JSAN.use("MochiKit.Base",[]);
}
try{
if(typeof (MochiKit.Base)=="undefined"){
throw "";
}
}
catch(e){
throw "MochiKit.DOM depends on MochiKit.Base!";
}
if(typeof (MochiKit.DOM)=="undefined"){
MochiKit.DOM={};
}
MochiKit.DOM.NAME="MochiKit.DOM";
MochiKit.DOM.VERSION="1.4";
MochiKit.DOM.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
MochiKit.DOM.toString=function(){
return this.__repr__();
};
MochiKit.DOM.EXPORT=["removeEmptyTextNodes","formContents","currentWindow","currentDocument","withWindow","withDocument","registerDOMConverter","coerceToDOM","createDOM","createDOMFunc","isChildNode","getNodeAttribute","setNodeAttribute","updateNodeAttributes","appendChildNodes","replaceChildNodes","removeElement","swapDOM","BUTTON","TT","PRE","H1","H2","H3","BR","CANVAS","HR","LABEL","TEXTAREA","FORM","STRONG","SELECT","OPTION","OPTGROUP","LEGEND","FIELDSET","P","UL","OL","LI","TD","TR","THEAD","TBODY","TFOOT","TABLE","TH","INPUT","SPAN","A","DIV","IMG","getElement","$","getElementsByTagAndClassName","addToCallStack","addLoadEvent","focusOnLoad","setElementClass","toggleElementClass","addElementClass","removeElementClass","swapElementClass","hasElementClass","escapeHTML","toHTML","emitHTML","scrapeText"];
MochiKit.DOM.EXPORT_OK=["domConverters"];
MochiKit.DOM.DEPRECATED=[["computedStyle","MochiKit.Style.computedStyle","1.4"],["elementDimensions","MochiKit.Style.getElementDimensions","1.4"],["elementPosition","MochiKit.Style.getElementPosition","1.4"],["hideElement","MochiKit.Style.hideElement","1.4"],["setElementDimensions","MochiKit.Style.setElementDimensions","1.4"],["setElementPosition","MochiKit.Style.setElementPosition","1.4"],["setDisplayForElement","MochiKit.Style.setDisplayForElement","1.4"],["setOpacity","MochiKit.Style.setOpacity","1.4"],["showElement","MochiKit.Style.showElement","1.4"],["Coordinates","MochiKit.Style.Coordinates","1.4"],["Dimensions","MochiKit.Style.Dimensions","1.4"]];
MochiKit.DOM.getViewportDimensions=new Function(""+"if (!MochiKit[\"Style\"]) {"+"    throw new Error(\"This function has been deprecated and depends on MochiKit.Style.\");"+"}"+"return MochiKit.Style.getViewportDimensions.apply(this, arguments);");
MochiKit.Base.update(MochiKit.DOM,{currentWindow:function(){
return MochiKit.DOM._window;
},currentDocument:function(){
return MochiKit.DOM._document;
},withWindow:function(win,func){
var self=MochiKit.DOM;
var _193=self._document;
var _194=self._win;
var rval;
try{
self._window=win;
self._document=win.document;
rval=func();
}
catch(e){
self._window=_194;
self._document=_193;
throw e;
}
self._window=_194;
self._document=_193;
return rval;
},formContents:function(elem){
var _196=[];
var _197=[];
var m=MochiKit.Base;
var self=MochiKit.DOM;
if(typeof (elem)=="undefined"||elem===null){
elem=self._document;
}else{
elem=self.getElement(elem);
}
m.nodeWalk(elem,function(elem){
var name=elem.name;
if(m.isNotEmpty(name)){
var _198=elem.tagName.toUpperCase();
if(_198==="INPUT"&&(elem.type=="radio"||elem.type=="checkbox")&&!elem.checked){
return null;
}
if(_198==="SELECT"){
if(elem.type=="select-one"){
if(elem.selectedIndex>=0){
var opt=elem.options[elem.selectedIndex];
_196.push(name);
_197.push(opt.value);
return null;
}
_196.push(name);
_197.push("");
return null;
}else{
var opts=elem.options;
if(!opts.length){
_196.push(name);
_197.push("");
return null;
}
for(var i=0;i<opts.length;i++){
var opt=opts[i];
if(!opt.selected){
continue;
}
_196.push(name);
_197.push(opt.value);
}
return null;
}
}
if(_198==="FORM"||_198==="P"||_198==="SPAN"||_198==="DIV"){
return elem.childNodes;
}
_196.push(name);
_197.push(elem.value||"");
return null;
}
return elem.childNodes;
});
return [_196,_197];
},withDocument:function(doc,func){
var self=MochiKit.DOM;
var _201=self._document;
var rval;
try{
self._document=doc;
rval=func();
}
catch(e){
self._document=_201;
throw e;
}
self._document=_201;
return rval;
},registerDOMConverter:function(name,_202,wrap,_203){
MochiKit.DOM.domConverters.register(name,_202,wrap,_203);
},coerceToDOM:function(node,ctx){
var m=MochiKit.Base;
var im=MochiKit.Iter;
var self=MochiKit.DOM;
if(im){
var iter=im.iter;
var _207=im.repeat;
var map=m.map;
}
var _209=self.domConverters;
var _210=arguments.callee;
var _211=m.NotFound;
while(true){
if(typeof (node)=="undefined"||node===null){
return null;
}
if(typeof (node.nodeType)!="undefined"&&node.nodeType>0){
return node;
}
if(typeof (node)=="number"||typeof (node)=="boolean"){
node=node.toString();
}
if(typeof (node)=="string"){
return self._document.createTextNode(node);
}
if(typeof (node.__dom__)=="function"){
node=node.__dom__(ctx);
continue;
}
if(typeof (node.dom)=="function"){
node=node.dom(ctx);
continue;
}
if(typeof (node)=="function"){
node=node.apply(ctx,[ctx]);
continue;
}
if(im){
var _212=null;
try{
_212=iter(node);
}
catch(e){
}
if(_212){
return map(_210,_212,_207(ctx));
}
}
try{
node=_209.match(node,ctx);
continue;
}
catch(e){
if(e!=_211){
throw e;
}
}
return self._document.createTextNode(node.toString());
}
return undefined;
},isChildNode:function(node,_213){
var self=MochiKit.DOM;
if(typeof (node)=="string"){
node=self.getElement(node);
}
if(typeof (_213)=="string"){
_213=self.getElement(_213);
}
if(node===_213){
return true;
}
while(node&&node.tagName.toUpperCase()!="BODY"){
node=node.parentNode;
if(node===_213){
return true;
}
}
return false;
},setNodeAttribute:function(node,attr,_215){
var o={};
o[attr]=_215;
try{
return MochiKit.DOM.updateNodeAttributes(node,o);
}
catch(e){
}
return null;
},getNodeAttribute:function(node,attr){
var self=MochiKit.DOM;
var _216=self.attributeArray.renames[attr];
node=self.getElement(node);
try{
if(_216){
return node[_216];
}
return node.getAttribute(attr);
}
catch(e){
}
return null;
},updateNodeAttributes:function(node,_217){
var elem=node;
var self=MochiKit.DOM;
if(typeof (node)=="string"){
elem=self.getElement(node);
}
if(_217){
var _218=MochiKit.Base.updatetree;
if(self.attributeArray.compliant){
for(var k in _217){
var v=_217[k];
if(typeof (v)=="object"&&typeof (elem[k])=="object"){
_218(elem[k],v);
}else{
if(k.substring(0,2)=="on"){
if(typeof (v)=="string"){
v=new Function(v);
}
elem[k]=v;
}else{
elem.setAttribute(k,v);
}
}
}
}else{
var _219=self.attributeArray.renames;
for(k in _217){
v=_217[k];
var _220=_219[k];
if(k=="style"&&typeof (v)=="string"){
elem.style.cssText=v;
}else{
if(typeof (_220)=="string"){
elem[_220]=v;
}else{
if(typeof (elem[k])=="object"&&typeof (v)=="object"){
_218(elem[k],v);
}else{
if(k.substring(0,2)=="on"){
if(typeof (v)=="string"){
v=new Function(v);
}
elem[k]=v;
}else{
elem.setAttribute(k,v);
}
}
}
}
}
}
}
return elem;
},appendChildNodes:function(node){
var elem=node;
var self=MochiKit.DOM;
if(typeof (node)=="string"){
elem=self.getElement(node);
}
var _221=[self.coerceToDOM(MochiKit.Base.extend(null,arguments,1),elem)];
var _222=MochiKit.Base.concat;
while(_221.length){
var n=_221.shift();
if(typeof (n)=="undefined"||n===null){
}else{
if(typeof (n.nodeType)=="number"){
elem.appendChild(n);
}else{
_221=_222(n,_221);
}
}
}
return elem;
},replaceChildNodes:function(node){
var elem=node;
var self=MochiKit.DOM;
if(typeof (node)=="string"){
elem=self.getElement(node);
arguments[0]=elem;
}
var _223;
while((_223=elem.firstChild)){
elem.removeChild(_223);
}
if(arguments.length<2){
return elem;
}else{
return self.appendChildNodes.apply(this,arguments);
}
},createDOM:function(name,_224){
var elem;
var self=MochiKit.DOM;
var m=MochiKit.Base;
if(typeof (_224)=="string"||typeof (_224)=="number"){
var args=m.extend([name,null],arguments,1);
return arguments.callee.apply(this,args);
}
if(typeof (name)=="string"){
var _225=self._xhtml;
if(_224&&!self.attributeArray.compliant){
var _226="";
if("name" in _224){
_226+=" name=\""+self.escapeHTML(_224.name)+"\"";
}
if(name=="input"&&"type" in _224){
_226+=" type=\""+self.escapeHTML(_224.type)+"\"";
}
if(_226){
name="<"+name+_226+">";
_225=false;
}
}
var d=self._document;
if(_225&&d===document){
elem=d.createElementNS("http://www.w3.org/1999/xhtml",name);
}else{
elem=d.createElement(name);
}
}else{
elem=name;
}
if(_224){
self.updateNodeAttributes(elem,_224);
}
if(arguments.length<=2){
return elem;
}else{
var args=m.extend([elem],arguments,2);
return self.appendChildNodes.apply(this,args);
}
},createDOMFunc:function(){
var m=MochiKit.Base;
return m.partial.apply(this,m.extend([MochiKit.DOM.createDOM],arguments));
},removeElement:function(elem){
var e=MochiKit.DOM.getElement(elem);
e.parentNode.removeChild(e);
return e;
},swapDOM:function(dest,src){
var self=MochiKit.DOM;
dest=self.getElement(dest);
var _229=dest.parentNode;
if(src){
src=self.getElement(src);
_229.replaceChild(src,dest);
}else{
_229.removeChild(dest);
}
return src;
},getElement:function(id){
var self=MochiKit.DOM;
if(arguments.length==1){
return ((typeof (id)=="string")?self._document.getElementById(id):id);
}else{
return MochiKit.Base.map(self.getElement,arguments);
}
},getElementsByTagAndClassName:function(_231,_232,_233){
var self=MochiKit.DOM;
if(typeof (_231)=="undefined"||_231===null){
_231="*";
}
if(typeof (_233)=="undefined"||_233===null){
_233=self._document;
}
_233=self.getElement(_233);
var _234=(_233.getElementsByTagName(_231)||self._document.all);
if(typeof (_232)=="undefined"||_232===null){
return MochiKit.Base.extend(null,_234);
}
var _235=[];
for(var i=0;i<_234.length;i++){
var _236=_234[i];
var cls=_236.className;
if(!cls){
continue;
}
var _238=cls.split(" ");
for(var j=0;j<_238.length;j++){
if(_238[j]==_232){
_235.push(_236);
break;
}
}
}
return _235;
},_newCallStack:function(path,once){
var rval=function(){
var _241=arguments.callee.callStack;
for(var i=0;i<_241.length;i++){
if(_241[i].apply(this,arguments)===false){
break;
}
}
if(once){
try{
this[path]=null;
}
catch(e){
}
}
};
rval.callStack=[];
return rval;
},addToCallStack:function(_242,path,func,once){
var self=MochiKit.DOM;
var _243=_242[path];
var _244=_243;
if(!(typeof (_243)=="function"&&typeof (_243.callStack)=="object"&&_243.callStack!==null)){
_244=self._newCallStack(path,once);
if(typeof (_243)=="function"){
_244.callStack.push(_243);
}
_242[path]=_244;
}
_244.callStack.push(func);
},addLoadEvent:function(func){
var self=MochiKit.DOM;
self.addToCallStack(self._window,"onload",func,true);
},focusOnLoad:function(_245){
var self=MochiKit.DOM;
self.addLoadEvent(function(){
_245=self.getElement(_245);
if(_245){
_245.focus();
}
});
},setElementClass:function(_246,_247){
var self=MochiKit.DOM;
var obj=self.getElement(_246);
if(self.attributeArray.compliant){
obj.setAttribute("class",_247);
}else{
obj.setAttribute("className",_247);
}
},toggleElementClass:function(_248){
var self=MochiKit.DOM;
for(var i=1;i<arguments.length;i++){
var obj=self.getElement(arguments[i]);
if(!self.addElementClass(obj,_248)){
self.removeElementClass(obj,_248);
}
}
},addElementClass:function(_249,_250){
var self=MochiKit.DOM;
var obj=self.getElement(_249);
var cls=obj.className;
if(cls==undefined||cls.length===0){
self.setElementClass(obj,_250);
return true;
}
if(cls==_250){
return false;
}
var _251=cls.split(" ");
for(var i=0;i<_251.length;i++){
if(_251[i]==_250){
return false;
}
}
self.setElementClass(obj,cls+" "+_250);
return true;
},removeElementClass:function(_252,_253){
var self=MochiKit.DOM;
var obj=self.getElement(_252);
var cls=obj.className;
if(cls==undefined||cls.length===0){
return false;
}
if(cls==_253){
self.setElementClass(obj,"");
return true;
}
var _254=cls.split(" ");
for(var i=0;i<_254.length;i++){
if(_254[i]==_253){
_254.splice(i,1);
self.setElementClass(obj,_254.join(" "));
return true;
}
}
return false;
},swapElementClass:function(_255,_256,_257){
var obj=MochiKit.DOM.getElement(_255);
var res=MochiKit.DOM.removeElementClass(obj,_256);
if(res){
MochiKit.DOM.addElementClass(obj,_257);
}
return res;
},hasElementClass:function(_258,_259){
var obj=MochiKit.DOM.getElement(_258);
var cls=obj.className;
if(!cls){
return false;
}
var _260=cls.split(" ");
for(var i=1;i<arguments.length;i++){
var good=false;
for(var j=0;j<_260.length;j++){
if(_260[j]==arguments[i]){
good=true;
break;
}
}
if(!good){
return false;
}
}
return true;
},escapeHTML:function(s){
return s.replace(/&/g,"&amp;").replace(/"/g,"&quot;").replace(/</g,"&lt;").replace(/>/g,"&gt;");
},toHTML:function(dom){
return MochiKit.DOM.emitHTML(dom).join("");
},emitHTML:function(dom,lst){
if(typeof (lst)=="undefined"||lst===null){
lst=[];
}
var _264=[dom];
var self=MochiKit.DOM;
var _265=self.escapeHTML;
var _266=self.attributeArray;
while(_264.length){
dom=_264.pop();
if(typeof (dom)=="string"){
lst.push(dom);
}else{
if(dom.nodeType==1){
lst.push("<"+dom.tagName.toLowerCase());
var _267=[];
var _268=_266(dom);
for(var i=0;i<_268.length;i++){
var a=_268[i];
_267.push([" ",a.name,"=\"",_265(a.value),"\""]);
}
_267.sort();
for(i=0;i<_267.length;i++){
var _269=_267[i];
for(var j=0;j<_269.length;j++){
lst.push(_269[j]);
}
}
if(dom.hasChildNodes()){
lst.push(">");
_264.push("</"+dom.tagName.toLowerCase()+">");
var _270=dom.childNodes;
for(i=_270.length-1;i>=0;i--){
_264.push(_270[i]);
}
}else{
lst.push("/>");
}
}else{
if(dom.nodeType==3){
lst.push(_265(dom.nodeValue));
}
}
}
}
return lst;
},scrapeText:function(node,_271){
var rval=[];
(function(node){
var cn=node.childNodes;
if(cn){
for(var i=0;i<cn.length;i++){
arguments.callee.call(this,cn[i]);
}
}
var _273=node.nodeValue;
if(typeof (_273)=="string"){
rval.push(_273);
}
})(MochiKit.DOM.getElement(node));
if(_271){
return rval;
}else{
return rval.join("");
}
},removeEmptyTextNodes:function(_274){
_274=MochiKit.DOM.getElement(_274);
for(var i=0;i<_274.childNodes.length;i++){
var node=_274.childNodes[i];
if(node.nodeType==3&&!/\S/.test(node.nodeValue)){
node.parentNode.removeChild(node);
}
}
},__new__:function(win){
var m=MochiKit.Base;
if(typeof (document)!="undefined"){
this._document=document;
var _275="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul";
this._xhtml=(document.documentElement&&document.createElementNS&&document.documentElement.namespaceURI===_275);
}else{
if(MochiKit.MockDOM){
this._document=MochiKit.MockDOM.document;
}
}
this._window=win;
this.domConverters=new m.AdapterRegistry();
var _276=this._document.createElement("span");
var _277;
if(_276&&_276.attributes&&_276.attributes.length>0){
var _278=m.filter;
_277=function(node){
return _278(_277.ignoreAttrFilter,node.attributes);
};
_277.ignoreAttr={};
var _279=_276.attributes;
var _280=_277.ignoreAttr;
for(var i=0;i<_279.length;i++){
var a=_279[i];
_280[a.name]=a.value;
}
_277.ignoreAttrFilter=function(a){
return (_277.ignoreAttr[a.name]!=a.value);
};
_277.compliant=false;
_277.renames={"class":"className","checked":"defaultChecked","usemap":"useMap","for":"htmlFor","readonly":"readOnly","colspan":"colSpan","bgcolor":"bgColor"};
}else{
_277=function(node){
return node.attributes;
};
_277.compliant=true;
_277.renames={};
}
this.attributeArray=_277;
var _281=function(_282,arr){
var _283=arr[1].split(".");
var str="";
var obj={};
str+="if (!MochiKit."+_283[1]+") { throw new Error(\"";
str+="This function has been deprecated and depends on MochiKit.";
str+=_283[1]+".\");}";
str+="return MochiKit."+_283[1]+"."+arr[0];
str+=".apply(this, arguments);";
obj[_283[2]]=new Function(str);
MochiKit.Base.update(MochiKit[_282],obj);
};
for(var i;i<MochiKit.DOM.DEPRECATED.length;i++){
_281("DOM",MochiKit.DOM.DEPRECATED[i]);
}
var _285=this.createDOMFunc;
this.UL=_285("ul");
this.OL=_285("ol");
this.LI=_285("li");
this.TD=_285("td");
this.TR=_285("tr");
this.TBODY=_285("tbody");
this.THEAD=_285("thead");
this.TFOOT=_285("tfoot");
this.TABLE=_285("table");
this.TH=_285("th");
this.INPUT=_285("input");
this.SPAN=_285("span");
this.A=_285("a");
this.DIV=_285("div");
this.IMG=_285("img");
this.BUTTON=_285("button");
this.TT=_285("tt");
this.PRE=_285("pre");
this.H1=_285("h1");
this.H2=_285("h2");
this.H3=_285("h3");
this.BR=_285("br");
this.HR=_285("hr");
this.LABEL=_285("label");
this.TEXTAREA=_285("textarea");
this.FORM=_285("form");
this.P=_285("p");
this.SELECT=_285("select");
this.OPTION=_285("option");
this.OPTGROUP=_285("optgroup");
this.LEGEND=_285("legend");
this.FIELDSET=_285("fieldset");
this.STRONG=_285("strong");
this.CANVAS=_285("canvas");
this.$=this.getElement;
this.EXPORT_TAGS={":common":this.EXPORT,":all":m.concat(this.EXPORT,this.EXPORT_OK)};
m.nameFunctions(this);
}});
MochiKit.DOM.__new__(((typeof (window)=="undefined")?this:window));
if(MochiKit.__export__){
withWindow=MochiKit.DOM.withWindow;
withDocument=MochiKit.DOM.withDocument;
}
MochiKit.Base._exportSymbols(this,MochiKit.DOM);
if(typeof (dojo)!="undefined"){
dojo.provide("MochiKit.Iter");
dojo.require("MochiKit.Base");
}
if(typeof (JSAN)!="undefined"){
JSAN.use("MochiKit.Base",[]);
}
try{
if(typeof (MochiKit.Base)=="undefined"){
throw "";
}
}
catch(e){
throw "MochiKit.Iter depends on MochiKit.Base!";
}
if(typeof (MochiKit.Iter)=="undefined"){
MochiKit.Iter={};
}
MochiKit.Iter.NAME="MochiKit.Iter";
MochiKit.Iter.VERSION="1.4";
MochiKit.Base.update(MochiKit.Iter,{__repr__:function(){
return "["+this.NAME+" "+this.VERSION+"]";
},toString:function(){
return this.__repr__();
},registerIteratorFactory:function(name,_286,_287,_288){
MochiKit.Iter.iteratorRegistry.register(name,_286,_287,_288);
},iter:function(_289,_290){
var self=MochiKit.Iter;
if(arguments.length==2){
return self.takewhile(function(a){
return a!=_290;
},_289);
}
if(typeof (_289.next)=="function"){
return _289;
}else{
if(typeof (_289.iter)=="function"){
return _289.iter();
}
}
try{
return self.iteratorRegistry.match(_289);
}
catch(e){
var m=MochiKit.Base;
if(e==m.NotFound){
e=new TypeError(typeof (_289)+": "+m.repr(_289)+" is not iterable");
}
throw e;
}
},count:function(n){
if(!n){
n=0;
}
var m=MochiKit.Base;
return {repr:function(){
return "count("+n+")";
},toString:m.forwardCall("repr"),next:m.counter(n)};
},cycle:function(p){
var self=MochiKit.Iter;
var m=MochiKit.Base;
var lst=[];
var _292=self.iter(p);
return {repr:function(){
return "cycle(...)";
},toString:m.forwardCall("repr"),next:function(){
try{
var rval=_292.next();
lst.push(rval);
return rval;
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
if(lst.length===0){
this.next=function(){
throw self.StopIteration;
};
}else{
var i=-1;
this.next=function(){
i=(i+1)%lst.length;
return lst[i];
};
}
return this.next();
}
}};
},repeat:function(elem,n){
var m=MochiKit.Base;
if(typeof (n)=="undefined"){
return {repr:function(){
return "repeat("+m.repr(elem)+")";
},toString:m.forwardCall("repr"),next:function(){
return elem;
}};
}
return {repr:function(){
return "repeat("+m.repr(elem)+", "+n+")";
},toString:m.forwardCall("repr"),next:function(){
if(n<=0){
throw MochiKit.Iter.StopIteration;
}
n-=1;
return elem;
}};
},next:function(_293){
return _293.next();
},izip:function(p,q){
var m=MochiKit.Base;
var self=MochiKit.Iter;
var next=self.next;
var _296=m.map(self.iter,arguments);
return {repr:function(){
return "izip(...)";
},toString:m.forwardCall("repr"),next:function(){
return m.map(next,_296);
}};
},ifilter:function(pred,seq){
var m=MochiKit.Base;
seq=MochiKit.Iter.iter(seq);
if(pred===null){
pred=m.operator.truth;
}
return {repr:function(){
return "ifilter(...)";
},toString:m.forwardCall("repr"),next:function(){
while(true){
var rval=seq.next();
if(pred(rval)){
return rval;
}
}
return undefined;
}};
},ifilterfalse:function(pred,seq){
var m=MochiKit.Base;
seq=MochiKit.Iter.iter(seq);
if(pred===null){
pred=m.operator.truth;
}
return {repr:function(){
return "ifilterfalse(...)";
},toString:m.forwardCall("repr"),next:function(){
while(true){
var rval=seq.next();
if(!pred(rval)){
return rval;
}
}
return undefined;
}};
},islice:function(seq){
var self=MochiKit.Iter;
var m=MochiKit.Base;
seq=self.iter(seq);
var _299=0;
var stop=0;
var step=1;
var i=-1;
if(arguments.length==2){
stop=arguments[1];
}else{
if(arguments.length==3){
_299=arguments[1];
stop=arguments[2];
}else{
_299=arguments[1];
stop=arguments[2];
step=arguments[3];
}
}
return {repr:function(){
return "islice("+["...",_299,stop,step].join(", ")+")";
},toString:m.forwardCall("repr"),next:function(){
var rval;
while(i<_299){
rval=seq.next();
i++;
}
if(_299>=stop){
throw self.StopIteration;
}
_299+=step;
return rval;
}};
},imap:function(fun,p,q){
var m=MochiKit.Base;
var self=MochiKit.Iter;
var _303=m.map(self.iter,m.extend(null,arguments,1));
var map=m.map;
var next=self.next;
return {repr:function(){
return "imap(...)";
},toString:m.forwardCall("repr"),next:function(){
return fun.apply(this,map(next,_303));
}};
},applymap:function(fun,seq,self){
seq=MochiKit.Iter.iter(seq);
var m=MochiKit.Base;
return {repr:function(){
return "applymap(...)";
},toString:m.forwardCall("repr"),next:function(){
return fun.apply(self,seq.next());
}};
},chain:function(p,q){
var self=MochiKit.Iter;
var m=MochiKit.Base;
if(arguments.length==1){
return self.iter(arguments[0]);
}
var _304=m.map(self.iter,arguments);
return {repr:function(){
return "chain(...)";
},toString:m.forwardCall("repr"),next:function(){
while(_304.length>1){
try{
return _304[0].next();
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
_304.shift();
}
}
if(_304.length==1){
var arg=_304.shift();
this.next=m.bind("next",arg);
return this.next();
}
throw self.StopIteration;
}};
},takewhile:function(pred,seq){
var self=MochiKit.Iter;
seq=self.iter(seq);
return {repr:function(){
return "takewhile(...)";
},toString:MochiKit.Base.forwardCall("repr"),next:function(){
var rval=seq.next();
if(!pred(rval)){
this.next=function(){
throw self.StopIteration;
};
this.next();
}
return rval;
}};
},dropwhile:function(pred,seq){
seq=MochiKit.Iter.iter(seq);
var m=MochiKit.Base;
var bind=m.bind;
return {"repr":function(){
return "dropwhile(...)";
},"toString":m.forwardCall("repr"),"next":function(){
while(true){
var rval=seq.next();
if(!pred(rval)){
break;
}
}
this.next=bind("next",seq);
return rval;
}};
},_tee:function(_306,sync,_308){
sync.pos[_306]=-1;
var m=MochiKit.Base;
var _309=m.listMin;
return {repr:function(){
return "tee("+_306+", ...)";
},toString:m.forwardCall("repr"),next:function(){
var rval;
var i=sync.pos[_306];
if(i==sync.max){
rval=_308.next();
sync.deque.push(rval);
sync.max+=1;
sync.pos[_306]+=1;
}else{
rval=sync.deque[i-sync.min];
sync.pos[_306]+=1;
if(i==sync.min&&_309(sync.pos)!=sync.min){
sync.min+=1;
sync.deque.shift();
}
}
return rval;
}};
},tee:function(_310,n){
var rval=[];
var sync={"pos":[],"deque":[],"max":-1,"min":-1};
if(arguments.length==1||typeof (n)=="undefined"||n===null){
n=2;
}
var self=MochiKit.Iter;
_310=self.iter(_310);
var _tee=self._tee;
for(var i=0;i<n;i++){
rval.push(_tee(i,sync,_310));
}
return rval;
},list:function(_312){
var m=MochiKit.Base;
if(typeof (_312.slice)=="function"){
return _312.slice();
}else{
if(m.isArrayLike(_312)){
return m.concat(_312);
}
}
var self=MochiKit.Iter;
_312=self.iter(_312);
var rval=[];
try{
while(true){
rval.push(_312.next());
}
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
return rval;
}
return undefined;
},reduce:function(fn,_313,_314){
var i=0;
var x=_314;
var self=MochiKit.Iter;
_313=self.iter(_313);
if(arguments.length<3){
try{
x=_313.next();
}
catch(e){
if(e==self.StopIteration){
e=new TypeError("reduce() of empty sequence with no initial value");
}
throw e;
}
i++;
}
try{
while(true){
x=fn(x,_313.next());
}
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
}
return x;
},range:function(){
var _316=0;
var stop=0;
var step=1;
if(arguments.length==1){
stop=arguments[0];
}else{
if(arguments.length==2){
_316=arguments[0];
stop=arguments[1];
}else{
if(arguments.length==3){
_316=arguments[0];
stop=arguments[1];
step=arguments[2];
}else{
throw new TypeError("range() takes 1, 2, or 3 arguments!");
}
}
}
if(step===0){
throw new TypeError("range() step must not be 0");
}
return {next:function(){
if((step>0&&_316>=stop)||(step<0&&_316<=stop)){
throw MochiKit.Iter.StopIteration;
}
var rval=_316;
_316+=step;
return rval;
},repr:function(){
return "range("+[_316,stop,step].join(", ")+")";
},toString:MochiKit.Base.forwardCall("repr")};
},sum:function(_317,_318){
if(typeof (_318)=="undefined"||_318===null){
_318=0;
}
var x=_318;
var self=MochiKit.Iter;
_317=self.iter(_317);
try{
while(true){
x+=_317.next();
}
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
}
return x;
},exhaust:function(_319){
var self=MochiKit.Iter;
_319=self.iter(_319);
try{
while(true){
_319.next();
}
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
}
},forEach:function(_320,func,self){
var m=MochiKit.Base;
if(arguments.length>2){
func=m.bind(func,self);
}
if(m.isArrayLike(_320)){
try{
for(var i=0;i<_320.length;i++){
func(_320[i]);
}
}
catch(e){
if(e!=MochiKit.Iter.StopIteration){
throw e;
}
}
}else{
self=MochiKit.Iter;
self.exhaust(self.imap(func,_320));
}
},every:function(_321,func){
var self=MochiKit.Iter;
try{
self.ifilterfalse(func,_321).next();
return false;
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
return true;
}
},sorted:function(_322,cmp){
var rval=MochiKit.Iter.list(_322);
if(arguments.length==1){
cmp=MochiKit.Base.compare;
}
rval.sort(cmp);
return rval;
},reversed:function(_323){
var rval=MochiKit.Iter.list(_323);
rval.reverse();
return rval;
},some:function(_324,func){
var self=MochiKit.Iter;
try{
self.ifilter(func,_324).next();
return true;
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
return false;
}
},iextend:function(lst,_325){
if(MochiKit.Base.isArrayLike(_325)){
for(var i=0;i<_325.length;i++){
lst.push(_325[i]);
}
}else{
var self=MochiKit.Iter;
_325=self.iter(_325);
try{
while(true){
lst.push(_325.next());
}
}
catch(e){
if(e!=self.StopIteration){
throw e;
}
}
}
return lst;
},groupby:function(_326,_327){
var m=MochiKit.Base;
var self=MochiKit.Iter;
if(arguments.length<2){
_327=m.operator.identity;
}
_326=self.iter(_326);
var pk=undefined;
var k=undefined;
var v;
function fetch(){
v=_326.next();
k=_327(v);
}
function eat(){
var ret=v;
v=undefined;
return ret;
}
var _329=true;
var _330=m.compare;
return {repr:function(){
return "groupby(...)";
},next:function(){
while(_330(k,pk)===0){
fetch();
if(_329){
_329=false;
break;
}
}
pk=k;
return [k,{next:function(){
if(v==undefined){
fetch();
}
if(_330(k,pk)!==0){
throw self.StopIteration;
}
return eat();
}}];
}};
},groupby_as_array:function(_331,_332){
var m=MochiKit.Base;
var self=MochiKit.Iter;
if(arguments.length<2){
_332=m.operator.identity;
}
_331=self.iter(_331);
var _333=[];
var _334=true;
var _335;
var _336=m.compare;
while(true){
try{
var _337=_331.next();
var key=_332(_337);
}
catch(e){
if(e==self.StopIteration){
break;
}
throw e;
}
if(_334||_336(key,_335)!==0){
var _338=[];
_333.push([key,_338]);
}
_338.push(_337);
_334=false;
_335=key;
}
return _333;
},arrayLikeIter:function(_339){
var i=0;
return {repr:function(){
return "arrayLikeIter(...)";
},toString:MochiKit.Base.forwardCall("repr"),next:function(){
if(i>=_339.length){
throw MochiKit.Iter.StopIteration;
}
return _339[i++];
}};
},hasIterateNext:function(_340){
return (_340&&typeof (_340.iterateNext)=="function");
},iterateNextIter:function(_341){
return {repr:function(){
return "iterateNextIter(...)";
},toString:MochiKit.Base.forwardCall("repr"),next:function(){
var rval=_341.iterateNext();
if(rval===null||rval===undefined){
throw MochiKit.Iter.StopIteration;
}
return rval;
}};
}});
MochiKit.Iter.EXPORT_OK=["iteratorRegistry","arrayLikeIter","hasIterateNext","iterateNextIter",];
MochiKit.Iter.EXPORT=["StopIteration","registerIteratorFactory","iter","count","cycle","repeat","next","izip","ifilter","ifilterfalse","islice","imap","applymap","chain","takewhile","dropwhile","tee","list","reduce","range","sum","exhaust","forEach","every","sorted","reversed","some","iextend","groupby","groupby_as_array"];
MochiKit.Iter.__new__=function(){
var m=MochiKit.Base;
if(typeof (StopIteration)!="undefined"){
this.StopIteration=StopIteration;
}else{
this.StopIteration=new m.NamedError("StopIteration");
}
this.iteratorRegistry=new m.AdapterRegistry();
this.registerIteratorFactory("arrayLike",m.isArrayLike,this.arrayLikeIter);
this.registerIteratorFactory("iterateNext",this.hasIterateNext,this.iterateNextIter);
this.EXPORT_TAGS={":common":this.EXPORT,":all":m.concat(this.EXPORT,this.EXPORT_OK)};
m.nameFunctions(this);
};
MochiKit.Iter.__new__();
if(MochiKit.__export__){
reduce=MochiKit.Iter.reduce;
}
MochiKit.Base._exportSymbols(this,MochiKit.Iter);
if(typeof (dojo)!="undefined"){
dojo.provide("MochiKit.Style");
dojo.require("MochiKit.Base");
dojo.require("MochiKit.DOM");
}
if(typeof (JSAN)!="undefined"){
JSAN.use("MochiKit.Base",[]);
}
try{
if(typeof (MochiKit.Base)=="undefined"){
throw "";
}
}
catch(e){
throw "MochiKit.Style depends on MochiKit.Base!";
}
try{
if(typeof (MochiKit.DOM)=="undefined"){
throw "";
}
}
catch(e){
throw "MochiKit.Style depends on MochiKit.DOM!";
}
if(typeof (MochiKit.Style)=="undefined"){
MochiKit.Style={};
}
MochiKit.Style.NAME="MochiKit.Style";
MochiKit.Style.VERSION="1.4";
MochiKit.Style.__repr__=function(){
return "["+this.NAME+" "+this.VERSION+"]";
};
MochiKit.Style.toString=function(){
return this.__repr__();
};
MochiKit.Style.EXPORT_OK=[];
MochiKit.Style.EXPORT=["setOpacity","getOpacity","setStyle","getStyle","computedStyle","getElementDimensions","elementDimensions","setElementDimensions","getElementPosition","elementPosition","setElementPosition","setDisplayForElement","hideElement","showElement","getViewportDimensions","getViewportPosition","Dimensions","Coordinates"];
MochiKit.Style.Dimensions=function(w,h){
this.w=w;
this.h=h;
};
MochiKit.Style.Dimensions.prototype.__repr__=function(){
var repr=MochiKit.Base.repr;
return "{w: "+repr(this.w)+", h: "+repr(this.h)+"}";
};
MochiKit.Style.Dimensions.prototype.toString=function(){
return this.__repr__();
};
MochiKit.Style.Coordinates=function(x,y){
this.x=x;
this.y=y;
};
MochiKit.Style.Coordinates.prototype.__repr__=function(){
var repr=MochiKit.Base.repr;
return "{x: "+repr(this.x)+", y: "+repr(this.y)+"}";
};
MochiKit.Style.Coordinates.prototype.toString=function(){
return this.__repr__();
};
MochiKit.Base.update(MochiKit.Style,{computedStyle:function(elem,_346){
var dom=MochiKit.DOM;
var d=dom._document;
elem=dom.getElement(elem);
_346=MochiKit.Base.camelize(_346);
if(!elem||elem==d){
return undefined;
}
if(_346=="opacity"&&elem.filters){
try{
return elem.filters.item("DXImageTransform.Microsoft.Alpha").opacity/100;
}
catch(e){
try{
return elem.filters.item("alpha").opacity/100;
}
catch(e){
}
}
}
if(elem.currentStyle){
return elem.currentStyle[_346];
}
if(typeof (d.defaultView)=="undefined"){
return undefined;
}
if(d.defaultView===null){
return undefined;
}
var _347=d.defaultView.getComputedStyle(elem,null);
if(typeof (_347)=="undefined"||_347===null){
return undefined;
}
var _348=_346.replace(/([A-Z])/g,"-$1").toLowerCase();
return _347.getPropertyValue(_348);
},getStyle:function(elem,_349){
elem=MochiKit.DOM.getElement(elem);
var _350=elem.style[MochiKit.Base.camelize(_349)];
if(!_350){
if(document.defaultView&&document.defaultView.getComputedStyle){
var css=document.defaultView.getComputedStyle(elem,null);
_350=css?css.getPropertyValue(_349):null;
}else{
if(elem.currentStyle){
_350=elem.currentStyle[MochiKit.Base.camelize(_349)];
}
}
}
if(/Opera/.test(navigator.userAgent)&&(MochiKit.Base.find(["left","top","right","bottom"],_349)!=-1)){
if(MochiKit.Style.getStyle(elem,"position")=="static"){
_350="auto";
}
}
return _350=="auto"?null:_350;
},setStyle:function(elem,_352){
elem=MochiKit.DOM.getElement(elem);
for(name in _352){
elem.style[MochiKit.Base.camelize(name)]=_352[name];
}
},getOpacity:function(elem){
var _353;
if(_353=MochiKit.Style.getStyle(elem,"opacity")){
return parseFloat(_353);
}
if(_353=(MochiKit.Style.getStyle(elem,"filter")||"").match(/alpha\(opacity=(.*)\)/)){
if(_353[1]){
return parseFloat(_353[1])/100;
}
}
return 1;
},setOpacity:function(elem,o){
elem=MochiKit.DOM.getElement(elem);
var self=MochiKit.Style;
if(o==1){
var _354=/Gecko/.test(navigator.userAgent)&&!(/Konqueror|Safari|KHTML/.test(navigator.userAgent));
self.setStyle(elem,{opacity:_354?0.999999:1});
if(/MSIE/.test(navigator.userAgent)){
self.setStyle(elem,{filter:self.getStyle(elem,"filter").replace(/alpha\([^\)]*\)/gi,"")});
}
}else{
if(o<0.00001){
o=0;
}
self.setStyle(elem,{opacity:o});
if(/MSIE/.test(navigator.userAgent)){
self.setStyle(elem,{filter:self.getStyle(elem,"filter").replace(/alpha\([^\)]*\)/gi,"")+"alpha(opacity="+o*100+")"});
}
}
},getElementPosition:function(elem,_355){
var self=MochiKit.Style;
var dom=MochiKit.DOM;
elem=dom.getElement(elem);
if(!elem||(!(elem.x&&elem.y)&&(!elem.parentNode==null||self.computedStyle(elem,"display")=="none"))){
return undefined;
}
var c=new self.Coordinates(0,0);
var box=null;
var _358=null;
var d=MochiKit.DOM._document;
var de=d.documentElement;
var b=d.body;
if(!elem.parentNode&&elem.x&&elem.y){
c.x+=elem.x||0;
c.y+=elem.y||0;
}else{
if(elem.getBoundingClientRect){
box=elem.getBoundingClientRect();
c.x+=box.left+(de.scrollLeft||b.scrollLeft)-(de.clientLeft||0);
c.y+=box.top+(de.scrollTop||b.scrollTop)-(de.clientTop||0);
}else{
if(elem.offsetParent){
c.x+=elem.offsetLeft;
c.y+=elem.offsetTop;
_358=elem.offsetParent;
if(_358!=elem){
while(_358){
c.x+=_358.offsetLeft;
c.y+=_358.offsetTop;
_358=_358.offsetParent;
}
}
var ua=navigator.userAgent.toLowerCase();
if((typeof (opera)!="undefined"&&parseFloat(opera.version())<9)||(ua.indexOf("safari")!=-1&&self.computedStyle(elem,"position")=="absolute")){
c.x-=b.offsetLeft;
c.y-=b.offsetTop;
}
}
}
}
if(typeof (_355)!="undefined"){
_355=arguments.callee(_355);
if(_355){
c.x-=(_355.x||0);
c.y-=(_355.y||0);
}
}
if(elem.parentNode){
_358=elem.parentNode;
}else{
_358=null;
}
while(_358){
var _361=_358.tagName.toUpperCase();
if(_361==="BODY"||_361==="HTML"){
break;
}
c.x-=_358.scrollLeft;
c.y-=_358.scrollTop;
if(_358.parentNode){
_358=_358.parentNode;
}else{
_358=null;
}
}
return c;
},setElementPosition:function(elem,_362,_363){
elem=MochiKit.DOM.getElement(elem);
if(typeof (_363)=="undefined"){
_363="px";
}
var _364={};
var _365=MochiKit.Base.isUndefinedOrNull;
if(!_365(_362.x)){
_364["left"]=_362.x+_363;
}
if(!_365(_362.y)){
_364["top"]=_362.y+_363;
}
MochiKit.DOM.updateNodeAttributes(elem,{"style":_364});
},getElementDimensions:function(elem){
var self=MochiKit.Style;
var dom=MochiKit.DOM;
if(typeof (elem.w)=="number"||typeof (elem.h)=="number"){
return new self.Dimensions(elem.w||0,elem.h||0);
}
elem=dom.getElement(elem);
if(!elem){
return undefined;
}
var disp=self.computedStyle(elem,"display");
if(disp!="none"&&disp!=""&&typeof (disp)!="undefined"){
return new self.Dimensions(elem.offsetWidth||0,elem.offsetHeight||0);
}
var s=elem.style;
var _367=s.visibility;
var _368=s.position;
s.visibility="hidden";
s.position="absolute";
s.display="";
var _369=elem.offsetWidth;
var _370=elem.offsetHeight;
s.display="none";
s.position=_368;
s.visibility=_367;
return new self.Dimensions(_369,_370);
},setElementDimensions:function(elem,_371,_372){
elem=MochiKit.DOM.getElement(elem);
if(typeof (_372)=="undefined"){
_372="px";
}
var _373={};
var _374=MochiKit.Base.isUndefinedOrNull;
if(!_374(_371.w)){
_373["width"]=_371.w+_372;
}
if(!_374(_371.h)){
_373["height"]=_371.h+_372;
}
MochiKit.DOM.updateNodeAttributes(elem,{"style":_373});
},setDisplayForElement:function(_375,_376){
var _377=MochiKit.Base.extend(null,arguments,1);
var _378=MochiKit.DOM.getElement;
for(var i=0;i<_377.length;i++){
var _376=_378(_377[i]);
if(_376){
_376.style.display=_375;
}
}
},getViewportDimensions:function(){
var d=new MochiKit.Style.Dimensions();
var w=MochiKit.DOM._window;
var b=MochiKit.DOM._document.body;
if(w.innerWidth){
d.w=w.innerWidth;
d.h=w.innerHeight;
}else{
if(b.parentElement.clientWidth){
d.w=b.parentElement.clientWidth;
d.h=b.parentElement.clientHeight;
}else{
if(b&&b.clientWidth){
d.w=b.clientWidth;
d.h=b.clientHeight;
}
}
}
return d;
},getViewportPosition:function(){
var c=new MochiKit.Style.Coordinates(0,0);
var d=MochiKit.DOM._document;
var de=d.documentElement;
var db=d.body;
if(de&&(de.scrollTop||de.scrollLeft)){
c.x=de.scrollLeft;
c.y=de.scrollTop;
}else{
if(db){
c.x=db.scrollLeft;
c.y=db.scrollTop;
}
}
return c;
},__new__:function(){
var m=MochiKit.Base;
this.elementPosition=this.getElementPosition;
this.elementDimensions=this.getElementDimensions;
this.hideElement=m.partial(this.setDisplayForElement,"none");
this.showElement=m.partial(this.setDisplayForElement,"block");
this.EXPORT_TAGS={":common":this.EXPORT,":all":m.concat(this.EXPORT,this.EXPORT_OK)};
m.nameFunctions(this);
}});
MochiKit.Style.__new__();
MochiKit.Base._exportSymbols(this,MochiKit.Style);
if(typeof (dojo)!="undefined"){
dojo.provide("MochiKit.Signal");
dojo.require("MochiKit.Base");
dojo.require("MochiKit.DOM");
dojo.require("MochiKit.Style");
}
if(typeof (JSAN)!="undefined"){
JSAN.use("MochiKit.Base",[]);
JSAN.use("MochiKit.DOM",[]);
JSAN.use("MochiKit.Style",[]);
}
try{
if(typeof (MochiKit.Base)=="undefined"){
throw "";
}
}
catch(e){
throw "MochiKit.Signal depends on MochiKit.Base!";
}
try{
if(typeof (MochiKit.DOM)=="undefined"){
throw "";
}
}
catch(e){
throw "MochiKit.Signal depends on MochiKit.DOM!";
}
try{
if(typeof (MochiKit.Style)=="undefined"){
throw "";
}
}
catch(e){
throw "MochiKit.Signal depends on MochiKit.Style!";
}
if(typeof (MochiKit.Signal)=="undefined"){
MochiKit.Signal={};
}
MochiKit.Signal.NAME="MochiKit.Signal";
MochiKit.Signal.VERSION="1.4";
MochiKit.Signal._observers=[];
MochiKit.Signal.Event=function(src,e){
this._event=e||window.event;
this._src=src;
};
MochiKit.Base.update(MochiKit.Signal.Event.prototype,{__repr__:function(){
var repr=MochiKit.Base.repr;
var str="{event(): "+repr(this.event())+", src(): "+repr(this.src())+", type(): "+repr(this.type())+", target(): "+repr(this.target())+", modifier(): "+"{alt: "+repr(this.modifier().alt)+", ctrl: "+repr(this.modifier().ctrl)+", meta: "+repr(this.modifier().meta)+", shift: "+repr(this.modifier().shift)+", any: "+repr(this.modifier().any)+"}";
if(this.type()&&this.type().indexOf("key")===0){
str+=", key(): {code: "+repr(this.key().code)+", string: "+repr(this.key().string)+"}";
}
if(this.type()&&(this.type().indexOf("mouse")===0||this.type().indexOf("click")!=-1||this.type()=="contextmenu")){
str+=", mouse(): {page: "+repr(this.mouse().page)+", client: "+repr(this.mouse().client);
if(this.type()!="mousemove"){
str+=", button: {left: "+repr(this.mouse().button.left)+", middle: "+repr(this.mouse().button.middle)+", right: "+repr(this.mouse().button.right)+"}}";
}else{
str+="}";
}
}
if(this.type()=="mouseover"||this.type()=="mouseout"){
str+=", relatedTarget(): "+repr(this.relatedTarget());
}
str+="}";
return str;
},toString:function(){
return this.__repr__();
},src:function(){
return this._src;
},event:function(){
return this._event;
},type:function(){
return this._event.type||undefined;
},target:function(){
return this._event.target||this._event.srcElement;
},_relatedTarget:null,relatedTarget:function(){
if(this._relatedTarget!==null){
return this._relatedTarget;
}
var elem=null;
if(this.type()=="mouseover"){
elem=(this._event.relatedTarget||this._event.fromElement);
}else{
if(this.type()=="mouseout"){
elem=(this._event.relatedTarget||this._event.toElement);
}
}
if(elem!==null){
this._relatedTarget=elem;
return elem;
}
return undefined;
},_modifier:null,modifier:function(){
if(this._modifier!==null){
return this._modifier;
}
var m={};
m.alt=this._event.altKey;
m.ctrl=this._event.ctrlKey;
m.meta=this._event.metaKey||false;
m.shift=this._event.shiftKey;
m.any=m.alt||m.ctrl||m.shift||m.meta;
this._modifier=m;
return m;
},_key:null,key:function(){
if(this._key!==null){
return this._key;
}
var k={};
if(this.type()&&this.type().indexOf("key")===0){
if(this.type()=="keydown"||this.type()=="keyup"){
k.code=this._event.keyCode;
k.string=(MochiKit.Signal._specialKeys[k.code]||"KEY_UNKNOWN");
this._key=k;
return k;
}else{
if(this.type()=="keypress"){
k.code=0;
k.string="";
if(typeof (this._event.charCode)!="undefined"&&this._event.charCode!==0&&!MochiKit.Signal._specialMacKeys[this._event.charCode]){
k.code=this._event.charCode;
k.string=String.fromCharCode(k.code);
}else{
if(this._event.keyCode&&typeof (this._event.charCode)=="undefined"){
k.code=this._event.keyCode;
k.string=String.fromCharCode(k.code);
}
}
this._key=k;
return k;
}
}
}
return undefined;
},_mouse:null,mouse:function(){
if(this._mouse!==null){
return this._mouse;
}
var m={};
var e=this._event;
if(this.type()&&(this.type().indexOf("mouse")===0||this.type().indexOf("click")!=-1||this.type()=="contextmenu")){
m.client=new MochiKit.Style.Coordinates(0,0);
if(e.clientX||e.clientY){
m.client.x=(!e.clientX||e.clientX<0)?0:e.clientX;
m.client.y=(!e.clientY||e.clientY<0)?0:e.clientY;
}
m.page=new MochiKit.Style.Coordinates(0,0);
if(e.pageX||e.pageY){
m.page.x=(!e.pageX||e.pageX<0)?0:e.pageX;
m.page.y=(!e.pageY||e.pageY<0)?0:e.pageY;
}else{
var de=MochiKit.DOM._document.documentElement;
var b=MochiKit.DOM._document.body;
m.page.x=e.clientX+(de.scrollLeft||b.scrollLeft)-(de.clientLeft||0);
m.page.y=e.clientY+(de.scrollTop||b.scrollTop)-(de.clientTop||0);
}
if(this.type()!="mousemove"){
m.button={};
m.button.left=false;
m.button.right=false;
m.button.middle=false;
if(e.which){
m.button.left=(e.which==1);
m.button.middle=(e.which==2);
m.button.right=(e.which==3);
}else{
m.button.left=!!(e.button&1);
m.button.right=!!(e.button&2);
m.button.middle=!!(e.button&4);
}
}
this._mouse=m;
return m;
}
return undefined;
},stop:function(){
this.stopPropagation();
this.preventDefault();
},stopPropagation:function(){
if(this._event.stopPropagation){
this._event.stopPropagation();
}else{
this._event.cancelBubble=true;
}
},preventDefault:function(){
if(this._event.preventDefault){
this._event.preventDefault();
}else{
if(this._confirmUnload===null){
this._event.returnValue=false;
}
}
},_confirmUnload:null,confirmUnload:function(msg){
if(this.type()=="beforeunload"){
this._confirmUnload=msg;
this._event.returnValue=msg;
}
}});
MochiKit.Signal._specialMacKeys={3:"KEY_ENTER",63289:"KEY_NUM_PAD_CLEAR",63276:"KEY_PAGE_UP",63277:"KEY_PAGE_DOWN",63275:"KEY_END",63273:"KEY_HOME",63234:"KEY_ARROW_LEFT",63232:"KEY_ARROW_UP",63235:"KEY_ARROW_RIGHT",63233:"KEY_ARROW_DOWN",63302:"KEY_INSERT",63272:"KEY_DELETE"};
(function(){
var _380=MochiKit.Signal._specialMacKeys;
for(i=63236;i<=63242;i++){
_380[i]="KEY_F"+(i-63236+1);
}
})();
MochiKit.Signal._specialKeys={8:"KEY_BACKSPACE",9:"KEY_TAB",12:"KEY_NUM_PAD_CLEAR",13:"KEY_ENTER",16:"KEY_SHIFT",17:"KEY_CTRL",18:"KEY_ALT",19:"KEY_PAUSE",20:"KEY_CAPS_LOCK",27:"KEY_ESCAPE",32:"KEY_SPACEBAR",33:"KEY_PAGE_UP",34:"KEY_PAGE_DOWN",35:"KEY_END",36:"KEY_HOME",37:"KEY_ARROW_LEFT",38:"KEY_ARROW_UP",39:"KEY_ARROW_RIGHT",40:"KEY_ARROW_DOWN",44:"KEY_PRINT_SCREEN",45:"KEY_INSERT",46:"KEY_DELETE",59:"KEY_SEMICOLON",91:"KEY_WINDOWS_LEFT",92:"KEY_WINDOWS_RIGHT",93:"KEY_SELECT",106:"KEY_NUM_PAD_ASTERISK",107:"KEY_NUM_PAD_PLUS_SIGN",109:"KEY_NUM_PAD_HYPHEN-MINUS",110:"KEY_NUM_PAD_FULL_STOP",111:"KEY_NUM_PAD_SOLIDUS",144:"KEY_NUM_LOCK",145:"KEY_SCROLL_LOCK",186:"KEY_SEMICOLON",187:"KEY_EQUALS_SIGN",188:"KEY_COMMA",189:"KEY_HYPHEN-MINUS",190:"KEY_FULL_STOP",191:"KEY_SOLIDUS",192:"KEY_GRAVE_ACCENT",219:"KEY_LEFT_SQUARE_BRACKET",220:"KEY_REVERSE_SOLIDUS",221:"KEY_RIGHT_SQUARE_BRACKET",222:"KEY_APOSTROPHE"};
(function(){
var _381=MochiKit.Signal._specialKeys;
for(var i=48;i<=57;i++){
_381[i]="KEY_"+(i-48);
}
for(i=65;i<=90;i++){
_381[i]="KEY_"+String.fromCharCode(i);
}
for(i=96;i<=105;i++){
_381[i]="KEY_NUM_PAD_"+(i-96);
}
for(i=112;i<=123;i++){
_381[i]="KEY_F"+(i-112+1);
}
})();
MochiKit.Base.update(MochiKit.Signal,{__repr__:function(){
return "["+this.NAME+" "+this.VERSION+"]";
},toString:function(){
return this.__repr__();
},_unloadCache:function(){
var self=MochiKit.Signal;
var _382=self._observers;
for(var i=0;i<_382.length;i++){
self._disconnect(_382[i]);
}
delete self._observers;
try{
window.onload=undefined;
}
catch(e){
}
try{
window.onunload=undefined;
}
catch(e){
}
},_listener:function(src,func,obj,_383){
var self=MochiKit.Signal;
var E=self.Event;
if(!_383){
return MochiKit.Base.bind(func,obj);
}
obj=obj||src;
if(typeof (func)=="string"){
return function(_385){
obj[func].apply(obj,[new E(src,_385)]);
};
}else{
return function(_386){
func.apply(obj,[new E(src,_386)]);
};
}
},_browserAlreadyHasMouseEnterAndLeave:function(){
return /MSIE/.test(navigator.userAgent);
},_mouseEnterListener:function(src,sig,func,obj){
var E=MochiKit.Signal.Event;
return function(_388){
var e=new E(src,_388);
try{
e.relatedTarget().nodeName;
}
catch(err){
return;
}
e.stop();
if(MochiKit.DOM.isChildNode(e.relatedTarget(),src)){
return;
}
e.type=function(){
return sig;
};
if(typeof (func)=="string"){
return obj[func].apply(obj,[e]);
}else{
return func.apply(obj,[e]);
}
};
},_getDestPair:function(_389,_390){
var obj=null;
var func=null;
if(typeof (_390)!="undefined"){
obj=_389;
func=_390;
if(typeof (_390)=="string"){
if(typeof (_389[_390])!="function"){
throw new Error("'funcOrStr' must be a function on 'objOrFunc'");
}
}else{
if(typeof (_390)!="function"){
throw new Error("'funcOrStr' must be a function or string");
}
}
}else{
if(typeof (_389)!="function"){
throw new Error("'objOrFunc' must be a function if 'funcOrStr' is not given");
}else{
func=_389;
}
}
return [obj,func];
},connect:function(src,sig,_391,_392){
src=MochiKit.DOM.getElement(src);
var self=MochiKit.Signal;
if(typeof (sig)!="string"){
throw new Error("'sig' must be a string");
}
var _393=self._getDestPair(_391,_392);
var obj=_393[0];
var func=_393[1];
if(typeof (obj)=="undefined"||obj===null){
obj=src;
}
var _394=!!(src.addEventListener||src.attachEvent);
if(_394&&(sig==="onmouseenter"||sig==="onmouseleave")&&!self._browserAlreadyHasMouseEnterAndLeave()){
var _395=self._mouseEnterListener(src,sig.substr(2),func,obj);
if(sig==="onmouseenter"){
sig="onmouseover";
}else{
sig="onmouseout";
}
}else{
var _395=self._listener(src,func,obj,_394);
}
if(src.addEventListener){
src.addEventListener(sig.substr(2),_395,false);
}else{
if(src.attachEvent){
src.attachEvent(sig,_395);
}
}
var _396=[src,sig,_395,_394,_391,_392,true];
self._observers.push(_396);
if(!_394&&typeof (src.__connect__)=="function"){
var args=MochiKit.Base.extend([_396],arguments,1);
src.__connect__.apply(src,args);
}
return _396;
},_disconnect:function(_397){
if(!_397[6]){
return;
}
_397[6]=false;
if(!_397[3]){
return;
}
var src=_397[0];
var sig=_397[1];
var _398=_397[2];
if(src.removeEventListener){
src.removeEventListener(sig.substr(2),_398,false);
}else{
if(src.detachEvent){
src.detachEvent(sig,_398);
}else{
throw new Error("'src' must be a DOM element");
}
}
},disconnect:function(_399){
var self=MochiKit.Signal;
var _400=self._observers;
var m=MochiKit.Base;
if(arguments.length>1){
var src=MochiKit.DOM.getElement(arguments[0]);
var sig=arguments[1];
var obj=arguments[2];
var func=arguments[3];
for(var i=_400.length-1;i>=0;i--){
var o=_400[i];
if(o[0]===src&&o[1]===sig&&o[4]===obj&&o[5]===func){
self._disconnect(o);
if(!self._lock){
_400.splice(i,1);
}else{
self._dirty=true;
}
return true;
}
}
}else{
var idx=m.findIdentical(_400,_399);
if(idx>=0){
self._disconnect(_399);
if(!self._lock){
_400.splice(idx,1);
}else{
self._dirty=true;
}
return true;
}
}
return false;
},disconnectAllTo:function(_401,_402){
var self=MochiKit.Signal;
var _403=self._observers;
var _404=self._disconnect;
var _405=self._lock;
var _406=self._dirty;
if(typeof (_402)==="undefined"){
_402=null;
}
for(var i=_403.length-1;i>=0;i--){
var _407=_403[i];
if(_407[4]===_401&&(_402===null||_407[5]===_402)){
_404(_407);
if(_405){
_406=true;
}else{
_403.splice(i,1);
}
}
}
self._dirty=_406;
},disconnectAll:function(src,sig){
src=MochiKit.DOM.getElement(src);
var m=MochiKit.Base;
var _408=m.flattenArguments(m.extend(null,arguments,1));
var self=MochiKit.Signal;
var _409=self._disconnect;
var _410=self._observers;
var i,ident;
var _411=self._lock;
var _412=self._dirty;
if(_408.length===0){
for(i=_410.length-1;i>=0;i--){
ident=_410[i];
if(ident[0]===src){
_409(ident);
if(!_411){
_410.splice(i,1);
}else{
_412=true;
}
}
}
}else{
var sigs={};
for(i=0;i<_408.length;i++){
sigs[_408[i]]=true;
}
for(i=_410.length-1;i>=0;i--){
ident=_410[i];
if(ident[0]===src&&ident[1] in sigs){
_409(ident);
if(!_411){
_410.splice(i,1);
}else{
_412=true;
}
}
}
}
self._dirty=_412;
},signal:function(src,sig){
var self=MochiKit.Signal;
var _414=self._observers;
src=MochiKit.DOM.getElement(src);
var args=MochiKit.Base.extend(null,arguments,2);
var _415=[];
self._lock=true;
for(var i=0;i<_414.length;i++){
var _416=_414[i];
if(_416[0]===src&&_416[1]===sig){
try{
_416[2].apply(src,args);
}
catch(e){
_415.push(e);
}
}
}
self._lock=false;
if(self._dirty){
self._dirty=false;
for(var i=_414.length-1;i>=0;i--){
if(!_414[i][6]){
_414.splice(i,1);
}
}
}
if(_415.length==1){
throw _415[0];
}else{
if(_415.length>1){
var e=new Error("Multiple errors thrown in handling 'sig', see errors property");
e.errors=_415;
throw e;
}
}
}});
MochiKit.Signal.EXPORT_OK=[];
MochiKit.Signal.EXPORT=["connect","disconnect","signal","disconnectAll","disconnectAllTo"];
MochiKit.Signal.__new__=function(win){
var m=MochiKit.Base;
this._document=document;
this._window=win;
this._lock=false;
this._dirty=false;
try{
this.connect(window,"onunload",this._unloadCache);
}
catch(e){
}
this.EXPORT_TAGS={":common":this.EXPORT,":all":m.concat(this.EXPORT,this.EXPORT_OK)};
m.nameFunctions(this);
};
MochiKit.Signal.__new__(this);
if(MochiKit.__export__){
connect=MochiKit.Signal.connect;
disconnect=MochiKit.Signal.disconnect;
disconnectAll=MochiKit.Signal.disconnectAll;
signal=MochiKit.Signal.signal;
}
MochiKit.Base._exportSymbols(this,MochiKit.Signal);


